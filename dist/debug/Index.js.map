{"version":3,"sources":["../../scripts/Index.ts","../../scripts/Configs/PluginConfigs.ts","../../scripts/Plugins/ItemStacker/index.ts","../../scripts/Class/Plugins.ts","../../scripts/Events/EntitySpawned/index.ts","../../scripts/Events/Tick/index.ts","../../scripts/Events/EntityRemoved/index.ts","../../scripts/Events/EntityDie/index.ts","../../scripts/Events/InteractEntity/index.ts","../../scripts/Events/CustomEvent.ts","../../scripts/Utilities/Database.ts","../../scripts/Utilities/QIDB.js","../../scripts/Plugins/ItemStacker/Configs/Databases.ts","../../scripts/Plugins/ItemStacker/Functions/IsRealItem.ts","../../scripts/Plugins/ItemStacker/Configs/DisabledItems.ts","../../scripts/Plugins/ItemStacker/Functions/GetItemNearBy.ts","../../scripts/Plugins/ItemStacker/Functions/GetItemAmount.ts","../../scripts/Plugins/ItemStacker/Functions/CombineItems.ts","../../scripts/Plugins/ItemStacker/Functions/RandomCode.ts","../../scripts/Plugins/ItemStacker/Functions/ItemToName.ts","../../scripts/Plugins/ItemStacker/Functions/GetSizeStack.ts","../../scripts/Plugins/PluginManagers/index.ts","../../scripts/Plugins/PluginManagers/Functions/LoadConfig.ts","../../scripts/Plugins/PluginManagers/Functions/SettingForms.ts","../../scripts/Plugins/PluginManagers/Functions/SetConfig.ts","../../scripts/Plugins/MobStacker/index.ts","../../scripts/Plugins/MobStacker/Functions/GetEntitiesNearBy.ts","../../scripts/Plugins/MobStacker/Configs/MobStackList.ts","../../scripts/Plugins/MobStacker/Functions/EntityToName.ts","../../scripts/Plugins/MobStacker/Functions/SpawnEntityClone.ts"],"sourcesContent":["import { MinecraftDimensionTypes, system, world } from \"@minecraft/server\";\nimport allPlugins from \"./Configs/PluginConfigs\";\nimport Plugins from \"./Class/Plugins\";\n\nfunction main() {\n  const loaderPlugins = allPlugins().find(x => x.setting.isLoader == true)\n  console.warn(loaderPlugins)\n  const loaderClass = new loaderPlugins.main(loaderPlugins.name) as Plugins\n  loaderClass.setup()\n  loaderClass.init()\n}\n\nsystem.run(main)","import { world } from \"@minecraft/server\"\r\nimport Plugins from \"../Interfaces/Plugin\"\r\nimport ItemStacker from \"../Plugins/ItemStacker\"\r\nimport PluginManagers from \"../Plugins/PluginManagers\"\r\nimport MobStacker from \"../Plugins/MobStacker\"\r\n\r\nconst data = JSON.parse(world.getDynamicProperty(\"pl-config\") as string ?? \"{}\") as Plugins[]\r\nconst config = [\r\n  {\r\n    name: \"Plugin Managers\",\r\n    main: PluginManagers,\r\n    setting: {\r\n      enabled: true,\r\n      isLoader: true\r\n    }\r\n  },\r\n  {\r\n    name: \"Item Stackers\",\r\n    main: ItemStacker,\r\n    setting: {\r\n      enabled: true,\r\n      isLoader: false\r\n    }\r\n  },\r\n  {\r\n    name: \"Mob Stackers\",\r\n    main: MobStacker,\r\n    setting: {\r\n      enabled: true,\r\n      isLoader: false\r\n    }\r\n  }\r\n]\r\n\r\nfunction allPlugins(reset: boolean = false): Plugins[] {\r\n  if ((JSON.parse(world.getDynamicProperty(\"pl-config\") as string) as Plugins[]).length !== config.length) {\r\n    world.sendMessage(\"§7[§r§5Detected§r§7]§8:§r §7Configs §6Changed§7.§r\")\r\n    world.setDynamicProperty(\"pl-config\", JSON.stringify(config));\r\n  }\r\n  const configR: Plugins[] = []\r\n  config.forEach((pl, i) => {\r\n    configR.push({\r\n      name: reset ? pl.name : (world.getDynamicProperty(\"pl-config\") !== undefined ? (JSON.parse(world.getDynamicProperty(\"pl-config\") as string) as Plugins[])[i].name : pl.name),\r\n      main: pl.main,\r\n      setting: reset ? pl.setting : (world.getDynamicProperty(\"pl-config\") !== undefined ? (JSON.parse(world.getDynamicProperty(\"pl-config\") as string) as Plugins[])[i].setting : pl.setting),\r\n    })\r\n  })\r\n\r\n  return configR\r\n}\r\n\r\nexport default allPlugins","import { ChatSendBeforeEvent, ItemStack, MinecraftDimensionTypes, system, world } from \"@minecraft/server\";\r\nimport Plugins from \"../../Class/Plugins\";\r\nimport CustomEvents from \"../../Events/CustomEvent\";\r\nimport { itemCode, itemStackMap, SeeingItem } from \"./Configs/Databases\";\r\nimport CombineItems from \"./Functions/CombineItems\";\r\nimport getItemAmount from \"./Functions/GetItemAmount\";\r\nimport isRealItem from \"./Functions/IsRealItem\";\r\nimport randomCode from \"./Functions/RandomCode\";\r\nimport ItemsToName from \"./Functions/ItemToName\";\r\nimport getSizeStack from \"./Functions/GetSizeStack\";\r\n\r\nexport default class ItemStacker extends Plugins {\r\n  private name: string\r\n  constructor(name: string) {\r\n    super(name)\r\n    this.name = name\r\n  }\r\n\r\n  public setup(): void {\r\n  }\r\n\r\n  public init(): void {\r\n    world.beforeEvents.chatSend.subscribe(resetDB)\r\n    function resetDB(ev: ChatSendBeforeEvent) {\r\n      if (ev.message == \"!resetDB\") {\r\n        ev.cancel = true\r\n        system.run(() => {\r\n          itemStackMap.clear()\r\n          itemCode.clear()\r\n        })\r\n      }\r\n    }\r\n\r\n    new CustomEvents(this.name).Tick(20, () => {\r\n      SeeingItem.clear();\r\n      world.getAllPlayers().forEach(pl => {\r\n        pl.dimension.getEntities({ type: \"minecraft:item\", excludeTags: [\"itemStacks\"], location: pl.location, maxDistance: 15 }).forEach(en => {\r\n          SeeingItem.add(en);\r\n        });\r\n      });\r\n      Object.keys(MinecraftDimensionTypes).forEach(dim => {\r\n        world.getDimension(MinecraftDimensionTypes[dim as \"nether\"]).getEntities({ type: \"minecraft:item\", excludeTags: [\"itemStacks\"] }).filter(x => x.getTags().some(x => x.startsWith(\"amount:\"))).forEach(en => {\r\n          if (!SeeingItem.has(en)) {\r\n            en.nameTag = \"\";\r\n          }\r\n          else {\r\n            en.nameTag = `§e>> §c${getItemAmount(en)}§7x§r §7${ItemsToName(en)}`;\r\n          }\r\n        });\r\n      });\r\n    })\r\n\r\n    new CustomEvents(this.name).EntityRemoved((ev) => {\r\n      const { removedEntity } = ev;\r\n      if (isRealItem(removedEntity)) {\r\n        const removedItemCode = itemCode.get(removedEntity.id)\r\n        const removedData = (itemStackMap.get(removedItemCode) as ItemStack[])\r\n        const removedItem =  removedData[0]\r\n        const realAmount = parseInt(removedData[1].nameTag)\r\n        const removedDimension = removedEntity.dimension.id;\r\n        const removedLocation = JSON.stringify(removedEntity.location);\r\n        system.run(() => {\r\n          removedItem.amount, realAmount, removedItem.maxAmount;\r\n          const size = getSizeStack(removedItem.amount, realAmount, removedItem.maxAmount);\r\n          for (let i = 0; i < size.length; i++) {\r\n            const items = removedItem;\r\n            items.amount = size[i];\r\n            const itemSpawn = world.getDimension(removedDimension).spawnItem(items, JSON.parse(removedLocation));\r\n            itemSpawn.addTag(\"itemStacks\");\r\n            system.runTimeout(() => {\r\n              if (itemSpawn.isValid()) {\r\n                const itemSpawnDimension = itemSpawn.dimension.id;\r\n                const itemSpawnLocation = JSON.stringify(itemSpawn.location);\r\n                const itemSpawnItem = itemSpawn.getComponent(\"item\").itemStack;\r\n                itemSpawn.remove();\r\n                world.getDimension(itemSpawnDimension).spawnItem(itemSpawnItem, JSON.parse(itemSpawnLocation));\r\n              }\r\n            }, 20);\r\n          }\r\n          const code = itemCode.get(removedEntity.id)\r\n          itemCode.delete(removedEntity.id)\r\n          itemStackMap.delete(code);\r\n        });\r\n      }\r\n    })\r\n\r\n    new CustomEvents(this.name).EntitySpawned((ev) => {\r\n      const { entity: addedEntity } = ev;\r\n      if (isRealItem(addedEntity)) {\r\n        CombineItems(addedEntity)\r\n        const code = randomCode(6)\r\n        const amount = new ItemStack(\"minecraft:stick\", 1)\r\n        amount.nameTag = `${getItemAmount(addedEntity)}`\r\n        itemCode.set(addedEntity.id, code)\r\n        itemStackMap.set(code, [ev.entity.getComponent(\"item\").itemStack, amount])\r\n      }\r\n    })\r\n  }\r\n}","import { world } from \"@minecraft/server\";\r\n\r\nexport default class Plugins {\r\n  private pluginName: string\r\n  constructor(name: string) {\r\n    this.pluginName = name;\r\n  }\r\n\r\n  public setup() {\r\n  }\r\n\r\n  public init() {\r\n  }\r\n}","import { EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, world } from \"@minecraft/server\";\r\nimport allPlugins from \"../../Configs/PluginConfigs\";\r\n\r\nexport default class CustomEntitySpawned {\r\n  constructor(enabled: string, callback: (ev: EntitySpawnAfterEvent) => void) {\r\n    world.afterEvents.entitySpawn.subscribe((ev) => {\r\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\r\n      callback(ev) \r\n    })\r\n  }\r\n}","import { EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, system, world } from \"@minecraft/server\";\r\nimport allPlugins from \"../../Configs/PluginConfigs\";\r\n\r\nexport default class CustomTick {\r\n  constructor(enabled: string, delay: number, callback: () => void) {\r\n    system.runInterval(() => {\r\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\r\n      callback() \r\n    }, delay)\r\n  }\r\n}","import { EntityRemoveBeforeEvent, EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, world } from \"@minecraft/server\";\r\nimport allPlugins from \"../../Configs/PluginConfigs\";\r\n\r\nexport default class CustomEntityRemoved {\r\n  constructor(enabled: string, callback: (ev: EntityRemoveBeforeEvent) => void) {\r\n    world.beforeEvents.entityRemove.subscribe((ev) => {\r\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\r\n      callback(ev) \r\n    })\r\n  }\r\n}","import { EntityDieAfterEvent, EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, world } from \"@minecraft/server\";\r\nimport allPlugins from \"../../Configs/PluginConfigs\";\r\n\r\nexport default class CustomEntityDie {\r\n  constructor(enabled: string, callback: (ev: EntityDieAfterEvent) => void) {\r\n    world.afterEvents.entityDie.subscribe((ev) => {\r\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\r\n      callback(ev) \r\n    })\r\n  }\r\n}","import { EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, PlayerInteractWithEntityBeforeEvent, world } from \"@minecraft/server\";\r\nimport allPlugins from \"../../Configs/PluginConfigs\";\r\n\r\nexport default class CustomEntityInteract {\r\n  constructor(enabled: string, callback: (ev: PlayerInteractWithEntityBeforeEvent) => void) {\r\n    world.beforeEvents.playerInteractWithEntity.subscribe((ev) => {\r\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\r\n      callback(ev) \r\n    })\r\n  }\r\n}","import { EntityDieAfterEvent, EntityRemoveBeforeEvent, EntitySpawnAfterEvent, PlayerInteractWithEntityBeforeEvent, world } from \"@minecraft/server\";\r\nimport CustomEntitySpawned from \"./EntitySpawned\";\r\nimport allPlugins from \"../Configs/PluginConfigs\";\r\nimport CustomTick from \"./Tick\";\r\nimport CustomEntityRemoved from \"./EntityRemoved\";\r\nimport CustomEntityDie from \"./EntityDie\";\r\nimport CustomEntityInteract from \"./InteractEntity\";\r\n\r\nexport default class CustomEvents {\r\n  private name: string\r\n  constructor(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  public EntitySpawned(callback: (ev: EntitySpawnAfterEvent) => void) {\r\n    new CustomEntitySpawned(this.name, callback)\r\n  }\r\n\r\n  public EntityRemoved(callback: (ev: EntityRemoveBeforeEvent) => void) {\r\n    new CustomEntityRemoved(this.name, callback)\r\n  }\r\n\r\n  public EntityDie(callback: (ev: EntityDieAfterEvent) => void) {\r\n    new CustomEntityDie(this.name, callback)\r\n  }\r\n\r\n  public EntityInteract(callback: (ev: PlayerInteractWithEntityBeforeEvent) => void) {\r\n    new CustomEntityInteract(this.name, callback)\r\n  }\r\n\r\n  public Tick(delay: number, callback: () => void) {\r\n    new CustomTick(this.name, delay, callback)\r\n  }\r\n}","import * as mc from \"@minecraft/server\";\r\n\r\nexport default class DynamicProperties<Value extends number | string | boolean | Object> {\r\n\r\n    /**\r\n     * @type {string} DYNAMIC_NAME - The name of the dynamic property\r\n     */\r\n    private DYNAMIC_NAME: string\r\n\r\n    /**  \r\n     * @type {Map<string, Value>} DYNAMIC_MAP - The dynamic property map\r\n     */\r\n    private DYNAMIC_MAP: Map<string, Value> = new Map<string, Value>()\r\n\r\n    /**\r\n     * @param {string} dynamicName - The name of the dynamic property\r\n     */\r\n    constructor(dynamicName: string) {\r\n        if (dynamicName.length > 16 || dynamicName.length < 1)\r\n            throw new Error(\"The length of the dynamic property name must be between 1 and 16\");\r\n        this.DYNAMIC_NAME = dynamicName\r\n        try {\r\n            const data = mc.world.getDynamicProperty(this.DYNAMIC_NAME) as string\r\n            const json = JSON.parse(data)\r\n            for (const [key, vakue] of json) {\r\n                this.DYNAMIC_MAP.set(key, vakue)\r\n            }\r\n        } catch {\r\n            this.save()\r\n        }\r\n    }\r\n    /**\r\n     * @private save - Save the dynamic property\r\n     */\r\n    private save() {\r\n        mc.world.setDynamicProperty(this.DYNAMIC_NAME, JSON.stringify([...this.DYNAMIC_MAP]))\r\n    }\r\n\r\n    /**\r\n     * @param {Key} key - The key of the dynamic property\r\n     * @param {Value} value - The value of the dynamic property\r\n     * @returns {DynamicProperties} - The dynamic property\r\n     */\r\n    public set(key: string, value: Value): this {\r\n        this.DYNAMIC_MAP.set(key, value)\r\n        this.save()\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @param {Key} key - The key of the dynamic property\r\n     * @returns {boolean} - The result of the delete\r\n     */\r\n    public delete(key: string): boolean {\r\n        const result = this.DYNAMIC_MAP.delete(key)\r\n        this.save()\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * @returns {DynamicProperties} - The dynamic property\r\n     */\r\n    public clear(): this {\r\n        this.DYNAMIC_MAP.clear()\r\n        this.save()\r\n        return this\r\n    }\r\n\r\n\r\n    /**\r\n     * @param {Key} key - The key of the dynamic property\r\n     * @returns {boolean} - The result of the has\r\n     */\r\n    public has(key: string): boolean {\r\n        return this.DYNAMIC_MAP.has(key)\r\n    }\r\n\r\n    /**\r\n     * @param {Key} key - The key of the dynamic property\r\n     * @returns {Value} - The value of the dynamic property\r\n     */\r\n    public get(key: string): Value {\r\n        return this.DYNAMIC_MAP.get(key)\r\n    }\r\n\r\n    /**\r\n     * @param {void} callbackfn - The callback of the dynamic property\r\n     * @returns {void} - The result of the forEach\r\n     */\r\n    public forEach(callbackfn: (value: Value, key: string, map: Map<string, Value>) => void, thisArg?: any): void {\r\n        return this.DYNAMIC_MAP.forEach(callbackfn, thisArg)\r\n    }\r\n\r\n    /**\r\n     * @returns {IterableIterator<string>} - The keys of the dynamic property\r\n     */\r\n    public get keys(): IterableIterator<string> {\r\n        return this.DYNAMIC_MAP.keys()\r\n    }\r\n\r\n    /**\r\n     * @returns {IterableIterator<Value>} - The values of the dynamic property\r\n     */\r\n    public get values(): IterableIterator<Value> {\r\n        return this.DYNAMIC_MAP.values()\r\n    }\r\n\r\n    /**\r\n     * @returns {IterableIterator<[string, Value]>} - The entries of the dynamic property\r\n     */\r\n    public get entries(): IterableIterator<[string, Value]> {\r\n        return this.DYNAMIC_MAP.entries()\r\n    }\r\n\r\n    /**\r\n     * @param {Key} thisArg - The key of the dynamic property\r\n     * @param {Value} callback - The value of the dynamic property\r\n     * @returns {boolean} - The result of the some\r\n     */\r\n    public find(callback: (value: [string, Value], index: number, array: [string, Value][]) => boolean, thisArg?: any): [string, Value] {\r\n        return [...this.DYNAMIC_MAP].find(callback, thisArg)\r\n    }\r\n\r\n    /**\r\n     * @param {Key} thisArg - The key of the dynamic property\r\n     * @param {Value} callback - The value of the dynamic property\r\n     * @returns {T[]} - The entries of the dynamic property\r\n     */\r\n    public map<T>(callback: (value: [string, Value], index: number, array: [string, Value][]) => T, thisArg?: any): T[] {\r\n        return [...this.DYNAMIC_MAP].map(callback, thisArg)\r\n    }\r\n\r\n    /**\r\n     * @param {Key} thisArg - The key of the dynamic property\r\n     * @param {Value} callback - The value of the dynamic property\r\n     * @returns {[string, Value][]} - The entries of the dynamic property\r\n     */\r\n    public filter(callback: (value: [string, Value], index: number, array: [string, Value][]) => boolean, thisArg?: any): [string, Value][] {\r\n        return [...this.DYNAMIC_MAP].filter(callback, thisArg)\r\n    }\r\n\r\n    /**\r\n     * @returns {number} - The size of the dynamic property\r\n     */\r\n    public get size(): number {\r\n        return this.DYNAMIC_MAP.size\r\n    }\r\n\r\n    /**\r\n     * @returns { string } - The key of the dynamic property\r\n     */\r\n    public hex(bytes: number): string {\r\n        return [...Array(bytes)].map(() => Math.floor(Math.random() * 16).toString(16)).join('')\r\n    }\r\n}","import { world, system, ItemStack, Player } from '@minecraft/server';\r\n/**\r\n * @Class Quick Item Database V3.8-Stable by Carchi77\r\n * @Contributors Drag0nD - Coptaine\r\n * @ Made to fix script api's missing method to save items as object.\r\n * @ Optimized for low end devices while keeping fast loading times.\r\n * @ Does NOT impact ingame performance.\r\n * @ Uses entities inventory and structures.\r\n * @ Zero data loss: items are saved as a perfect clone.\r\n**/\r\nexport class QIDB {\r\n    /**\r\n     * @param {string} namespace The unique namespace for the database keys.\r\n     * @param {number} saveRate The rate of background saves per Tick (50ms), 1 is the recomended value for normal usage, you can use an higher rate if you need to save more than 1 key per tick (performance will be affected).\r\n     * @param {boolean} logs If set to true, the database will log script latency in ms.\r\n     * @param {number} QAMsize Quick Access Memory Size, the max amount of keys to keep quickly accessible. A small size can couse lag on frequent iterated usage, a large number can cause high hardware RAM usage.\r\n     */\r\n    constructor(namespace = \"\", saveRate = 2, QAMsize = 100, logs = false) {\r\n        this.#saveRate = saveRate\r\n        this.#settings = {\r\n            logs: logs || false,\r\n            namespace: namespace\r\n        };\r\n        this.#queuedKeys = []\r\n        this.#queuedValues = []\r\n        this.#quickAccess = new Map()\r\n        this.#validNamespace = /^[a-z0-9_]*$/.test(this.#settings.namespace)\r\n        this.#dimension = world.getDimension(\"overworld\");\r\n\r\n        let sl = world.scoreboard.getObjective('qidb')\r\n        this.#sL;\r\n        const player = world.getPlayers()[0]\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] ${namespace} isn't a valid namespace. accepted char: a-z 0-9 _`);\r\n        if (player)\r\n            if (!sl || sl?.hasParticipant('x') === false) {\r\n                if (!sl) sl = world.scoreboard.addObjective('qidb');\r\n                sl.setScore('x', player.location.x)\r\n                sl.setScore('z', player.location.z)\r\n                this.#sL = { x: sl.getScore('x'), y: 318, z: sl.getScore('z') }\r\n                this.#dimension.runCommand(`/tickingarea add ${this.#sL.x} 319 ${this.#sL.z} ${this.#sL.x} 318 ${this.#sL.z} storagearea`);\r\n                console.log(`§q[Item Database] is initialized successfully. namespace: ${this.#settings.namespace}`)\r\n            } else {\r\n                this.#sL = { x: sl.getScore('x'), y: 318, z: sl.getScore('z') }\r\n                console.log(`§q[Item Database] is initialized successfully. namespace: ${this.#settings.namespace}`)\r\n            }\r\n        world.afterEvents.playerSpawn.subscribe(({ player, initialSpawn }) => {\r\n            if (!this.#validNamespace) throw new Error(`§c[Item Database] ${namespace} isn't a valid namespace. accepted char: a-z 0-9 _`);\r\n            if (!initialSpawn) return;\r\n            if (!sl || sl?.hasParticipant('x') === false) {\r\n                if (!sl) sl = world.scoreboard.addObjective('qidb');\r\n                sl.setScore('x', player.location.x)\r\n                sl.setScore('z', player.location.z)\r\n                this.#sL = { x: sl.getScore('x'), y: 318, z: sl.getScore('z') }\r\n                this.#dimension.runCommand(`/tickingarea add ${this.#sL.x} 319 ${this.#sL.z} ${this.#sL.x} 318 ${this.#sL.z} storagearea`);\r\n                console.log(`§q[Item Database] is initialized successfully. namespace: ${this.#settings.namespace}`)\r\n            } else {\r\n                try {sl.getScore('x')} catch {console.log(`§c[Item Database] Initialization Error. namespace: ${this.#settings.namespace}`)}\r\n                this.#sL = { x: sl.getScore('x'), y: 318, z: sl.getScore('z') }\r\n                console.log(`§q[Item Database] is initialized successfully. namespace: ${this.#settings.namespace}`)\r\n            }\r\n        })\r\n\r\n        let show = true\r\n        let runId\r\n        system.runInterval(() => {\r\n            const diff = this.#quickAccess.size - QAMsize;\r\n            if (diff > 0) {\r\n                for (let i = 0; i < diff; i++) {\r\n                    this.#quickAccess.delete(this.#quickAccess.keys().next().value);\r\n                }\r\n\r\n            }\r\n            if (this.#queuedKeys.length) {\r\n                show == true && console.log(\"§eSaving, Dont close the world.\")\r\n\r\n                if (!runId) runId = system.runInterval(() => {\r\n                    console.log(\"§eSaving, Dont close the world.\")\r\n                }, 120)\r\n                show = false\r\n                const start = Date.now()\r\n                const k = Math.min(this.#saveRate, this.#queuedKeys.length)\r\n                for (let i = 0; i < k; i++) {\r\n                    this.#romSave(this.#queuedKeys[0], this.#queuedValues[0]); if (logs) this.#timeWarn(start, this.#queuedKeys[0], \"saved\"); this.#queuedKeys.shift(); this.#queuedValues.shift()\r\n                }\r\n            } else if (runId) {\r\n                system.clearRun(runId)\r\n                runId = undefined\r\n                show == false && console.log(\"§aSaved, You can now close the world safely.\")\r\n                show = true\r\n            }\r\n        })\r\n        world.beforeEvents.playerLeave.subscribe(() => {\r\n            if (this.#queuedKeys.length && world.getPlayers().length < 2) {\r\n                console.error(\r\n                    `\\n\\n\\n\\n§c[Item Database]-[Fatal Error] World closed too early, items not saved correctly. \\n\\n` +\r\n                    `Namespace: ${this.#settings.namespace}\\n` +\r\n                    `Lost Keys amount: ${this.#queuedKeys.length}\\n\\n\\n\\n`\r\n                )\r\n            }\r\n        })\r\n    }\r\n    #saveRate;\r\n    #validNamespace;\r\n    #queuedKeys;\r\n    #settings;\r\n    #quickAccess;\r\n    #queuedValues;\r\n    #dimension;\r\n    #sL;\r\n    QAMusage() {\r\n        return this.#quickAccess.size;\r\n    }\r\n    #load(key) {\r\n        if (key.length > 30) throw new Error(`§c[Item Database] Out of range: <${key}> has more than 30 characters`)\r\n        let canStr = false;\r\n        try {\r\n            world.structureManager.place(key, this.#dimension, this.#sL, { includeEntities: true });\r\n            canStr = true;\r\n        } catch {\r\n            this.#dimension.spawnEntity(\"qidb:storage\", this.#sL);\r\n        }\r\n        const entities = this.#dimension.getEntities({ location: this.#sL, type: \"qidb:storage\" });\r\n        if (entities.length > 1) entities.forEach((e, index) => entities[index + 1]?.remove());\r\n        const entity = entities[0];\r\n        const inv = entity.getComponent(\"inventory\").container;\r\n        return { canStr, inv };\r\n    }\r\n    async #save(key, canStr) {\r\n        if (canStr) world.structureManager.delete(key);\r\n        world.structureManager.createFromWorld(key, this.#dimension, this.#sL, this.#sL, { saveMode: \"World\", includeEntities: true });\r\n        const entities = this.#dimension.getEntities({ location: this.#sL, type: \"qidb:storage\" });\r\n        entities.forEach(e => e.remove());\r\n    }\r\n    #timeWarn(time, key, action) {\r\n        console.warn(`[Item Database] ${Date.now() - time}ms => ${action} ${key} `);\r\n    }\r\n    async #queueSaving(key, value) {\r\n        this.#queuedKeys.push(key)\r\n        this.#queuedValues.push(value)\r\n    }\r\n    async #romSave(key, value) {\r\n        const { canStr, inv } = this.#load(key);\r\n        if (!value) for (let i = 0; i < 256; i++) inv.setItem(i, undefined), world.setDynamicProperty(key, null);\r\n        if (Array.isArray(value)) {\r\n            try { for (let i = 0; i < 256; i++) inv.setItem(i, value[i] || undefined) } catch\r\n            { throw new Error(`§c[Item Database] Invalid value type. supported: ItemStack | ItemStack[] | undefined`) }\r\n            world.setDynamicProperty(key, true)\r\n        } else {\r\n            try { inv.setItem(0, value), world.setDynamicProperty(key, false) } catch\r\n            { throw new Error(`§c[Item Database] Invalid value type. supported: ItemStack | ItemStack[] | undefined`) }\r\n        }\r\n        this.#save(key, canStr);\r\n    }\r\n\r\n    /**\r\n     * Sets a value as a key in the item database.\r\n     * @param {string} key The unique identifier of the value.\r\n     * @param {ItemStack[] | ItemStack} value The `ItemStack[]` or `itemStack` value to set.\r\n     * @throws Throws if `value` is an array that has more than 255 items.\r\n     */\r\n    set(key, value) {\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] Invalid name: <${this.#settings.namespace}>. accepted char: a-z 0-9 _`);\r\n        if (!/^[a-z0-9_]*$/.test(key)) throw new Error(`§c[Item Database] Invalid name: <${key}>. accepted char: a-z 0-9 _`);\r\n        const time = Date.now();\r\n        key = this.#settings.namespace + \":\" + key;\r\n        if (Array.isArray(value)) {\r\n            if (value.length > 255) throw new Error(`§c[Item Database] Out of range: <${key}> has more than 255 ItemStacks`)\r\n            world.setDynamicProperty(key, true)\r\n        } else {\r\n            world.setDynamicProperty(key, false)\r\n        }\r\n        this.#quickAccess.set(key, value)\r\n        if (this.#queuedKeys.includes(key)) {\r\n            const i = this.#queuedKeys.indexOf(key)\r\n            this.#queuedValues.splice(i, 1)\r\n            this.#queuedKeys.splice(i, 1)\r\n        }\r\n        this.#queueSaving(key, value)\r\n        if (this.#settings.logs) this.#timeWarn(time, key, \"set\");\r\n    }\r\n    /**\r\n     * Gets the value of a key from the item database.\r\n     * @param {string} key The identifier of the value.\r\n     * @returns {ItemStack | ItemStack[]} The `ItemStack` | `ItemStack[]` saved as `key`\r\n     * @throws Throws if the key doesn't exist.\r\n     */\r\n    get(key) {\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] Invalid name: <${this.#settings.namespace}>. accepted char: a-z 0-9 _`);\r\n        if (!/^[a-z0-9_]*$/.test(key)) throw new Error(`§c[Item Database] Invalid name: <${key}>. accepted char: a-z 0-9 _`);\r\n        const time = Date.now();\r\n        key = this.#settings.namespace + \":\" + key;\r\n        if (this.#quickAccess.has(key)) { if (this.#settings.logs) this.#timeWarn(time, key, \"got\"); return this.#quickAccess.get(key); }\r\n        const structure = world.structureManager.get(key)\r\n        if (!structure) throw new Error(`§c[Item Database] The key <${key}> doesn't exist.`);\r\n        const { canStr, inv } = this.#load(key);\r\n        const items = [];\r\n        for (let i = 0; i < 256; i++) items.push(inv.getItem(i));\r\n        for (let i = 255; i >= 0; i--) if (!items[i]) items.pop(); else break;\r\n        this.#save(key, canStr);\r\n        if (this.#settings.logs) this.#timeWarn(time, key, \"got\");\r\n        if (world.getDynamicProperty(key)) { this.#quickAccess.set(key, items); return items }\r\n        else { this.#quickAccess.set(key, items[0]); return items[0]; }\r\n    }\r\n    /**\r\n     * Checks if a key exists in the item database.\r\n     * @param {string} key The identifier of the value.\r\n     * @returns {boolean}`true` if the key exists, `false` if the key doesn't exist.\r\n     */\r\n    has(key) {\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] Invalid name: <${this.#settings.namespace}>. accepted char: a-z 0-9 _`);\r\n        if (!/^[a-z0-9_]*$/.test(key)) throw new Error(`§c[Item Database] Invalid name: <${key}>. accepted char: a-z 0-9 _`);\r\n        const time = Date.now();\r\n        key = this.#settings.namespace + \":\" + key;\r\n        const exist = this.#quickAccess.has(key) || world.structureManager.get(key)\r\n        if (this.#settings.logs) this.#timeWarn(time, key, `has ${!!exist}`);\r\n        if (exist) return true; else return false\r\n    }\r\n    /**\r\n     * Deletes a key from the item database.\r\n     * @param {string} key The identifier of the value.\r\n     * @throws Throws if the key doesn't exist.\r\n     */\r\n    delete(key) {\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] Invalid name: <${this.#settings.namespace}>. accepted char: a-z 0-9 _`);\r\n        if (!/^[a-z0-9_]*$/.test(key)) throw new Error(`§c[Item Database] Invalid name: <${key}>. accepted char: a-z 0-9 _`);\r\n        const time = Date.now();\r\n        key = this.#settings.namespace + \":\" + key;\r\n        if (this.#quickAccess.has(key)) this.#quickAccess.delete(key)\r\n        const structure = world.structureManager.get(key)\r\n        if (structure) world.structureManager.delete(key), world.setDynamicProperty(key, null);\r\n        else throw new Error(`§c[Item Database] The key <${key}> doesn't exist.`);\r\n        if (this.#settings.logs) this.#timeWarn(time, key, \"removed\");\r\n    }\r\n    /**\r\n     * Gets all the keys of your namespace from item database.\r\n     * @return {string[]} All the keys as an array of strings.\r\n     */\r\n    keys() {\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] Invalid name: <${this.#settings.namespace}>. accepted char: a-z 0-9 _`);\r\n        const allIds = world.getDynamicPropertyIds()\r\n        const ids = []\r\n        allIds.filter(id => id.startsWith(this.#settings.namespace + \":\")).forEach(id => ids.push(id.replace(this.#settings.namespace + \":\", \"\")))\r\n        return ids;\r\n    }\r\n    /**\r\n     * Gets all the keys of your namespace from item database (takes some time if values aren't alredy loaded in quickAccess).\r\n     * @return {ItemStack[][]} All the values as an array of ItemStack or ItemStack[].\r\n     */\r\n    values() {\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] Invalid name: <${this.#settings.namespace}>. accepted char: a-z 0-9 _`);\r\n        const time = Date.now();\r\n        const allIds = world.getDynamicPropertyIds()\r\n        const values = []\r\n        const filtered = allIds.filter(id => id.startsWith(this.#settings.namespace + \":\")).map(id => id.replace(this.#settings.namespace + \":\", \"\"))\r\n        for (const key of filtered) {\r\n            values.push(this.get(key));\r\n        }\r\n        if (this.#settings.logs) this.#timeWarn(time, `${JSON.stringify(values)}`, \"values\");\r\n        return values;\r\n    }\r\n    /**\r\n     * Clears all, CAN NOT REWIND.\r\n     */\r\n    clear() {\r\n        if (!this.#validNamespace) throw new Error(`§c[Item Database] Invalid name: <${this.#settings.namespace}>. accepted char: a-z 0-9 _`);\r\n        const time = Date.now();\r\n        const allIds = world.getDynamicPropertyIds()\r\n        const filtered = allIds.filter(id => id.startsWith(this.#settings.namespace + \":\")).map(id => id.replace(this.#settings.namespace + \":\", \"\"))\r\n        for (const key of filtered) {\r\n            this.delete(key)\r\n        }\r\n        if (this.#settings.logs) this.#timeWarn(time, ``, \"clear\");\r\n    }\r\n}","import DynamicProperties from \"../../../Utilities/Database\";\r\nimport { QIDB } from \"../../../Utilities/QIDB\";\r\n\r\nexport const itemStackMap = new QIDB(\"itemstacks\")\r\nexport const itemCode = new DynamicProperties<string>(\"itemCodes\")\r\nexport const SeeingItem = new Set();","import { Entity } from \"@minecraft/server\";\r\n\r\nexport default function isRealItem(entity: Entity) {\r\n  return entity.typeId == \"minecraft:item\" && !entity.hasTag(\"itemStacks\");\r\n}","const DisabledItem = [\"minecraft:bundle\", \"shulker_box\"];\r\n\r\nexport default DisabledItem","import { Dimension, Entity, ItemStack } from \"@minecraft/server\";\r\nimport isRealItem from \"./IsRealItem\";\r\nimport DisabledItem from \"../Configs/DisabledItems\";\r\n\r\nexport default function getItemNearBy(dim: Dimension, itemEn: Entity, raduis: number = 7) {\r\n  return dim.getEntities({ location: itemEn.location, maxDistance: raduis, type: \"minecraft:item\", excludeTags: [\"itemStacks\"] })\r\n    .filter(x => x !== itemEn)\r\n    .filter(x => x.getComponent(\"item\").itemStack.typeId == itemEn.getComponent(\"item\").itemStack.typeId)\r\n    .filter(x => !x.getComponent(\"item\").itemStack.hasComponent(\"enchantable\"))\r\n    .filter(x => x.getTags().some(x => x.startsWith(\"amount:\")))\r\n    .filter(x => !DisabledItem.some(e => x.getComponent(\"item\").itemStack.typeId.includes(e)));\r\n}","import { Entity } from \"@minecraft/server\";\r\n\r\nexport default function getItemAmount(entity: Entity) {\r\n  return parseInt(entity.getTags().find(x => x.startsWith(\"amount:\")).split(\":\")[1]) ?? entity.getComponent(\"item\").itemStack.amount;\r\n}","import { Entity } from \"@minecraft/server\";\r\nimport isRealItem from \"./IsRealItem\";\r\nimport getItemNearBy from \"./GetItemNearBy\";\r\nimport getItemAmount from \"./GetItemAmount\";\r\nimport { itemCode, itemStackMap } from \"../Configs/Databases\";\r\n\r\nexport default function CombineItems(entity: Entity) {\r\n  if (isRealItem(entity)) {\r\n    const itemNearBy = getItemNearBy(entity.dimension, entity, 10);\r\n    const tagFound = entity.getTags().find(x => x.startsWith(\"amount:\"));\r\n    if (tagFound) {\r\n        entity.removeTag(tagFound);\r\n        entity.addTag(`amount:${itemNearBy.reduce((prev, crr) => prev + getItemAmount(crr), 0) + entity.getComponent(\"item\").itemStack.amount}`);\r\n    } else {\r\n        entity.addTag(`amount:${itemNearBy.reduce((prev, crr) => prev + getItemAmount(crr), 0) + entity.getComponent(\"item\").itemStack.amount}`);\r\n    }\r\n    itemNearBy.forEach(en => {\r\n        en.addTag(\"itemStacks\");\r\n        const code = itemCode.get(en.id)\r\n        itemStackMap.delete(code);\r\n        en.remove();\r\n    });\r\n}\r\n}","export default function randomCode(length: number) {\r\n  let result = '';\r\n  const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n  const charactersLength = characters.length;\r\n  let counter = 0;\r\n  while (counter < length) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    counter += 1;\r\n  }\r\n  return result;\r\n}\r\n","import { Entity } from \"@minecraft/server\";\r\n\r\nexport default function ItemsToName(entity: Entity) {\r\n  return entity.getComponent(\"item\").itemStack.typeId\r\n      .split(\":\")[1]\r\n      .split(\"_\")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n}","export default function getSizeStack(current: number, amount: number, maxStack: number) {\r\n  const remaining = amount - current;\r\n  return [...Array(Math.floor(remaining / maxStack)).fill(maxStack), remaining % maxStack].filter(Boolean);\r\n}","import { system, world } from \"@minecraft/server\";\r\nimport allPlugins from \"../../Configs/PluginConfigs\";\r\nimport Plugins from \"../../Class/Plugins\";\r\nimport loadPlugins from \"./Functions/LoadConfig\";\r\nimport showForm from \"./Functions/SettingForms\";\r\n\r\nexport default class PluginManagers extends Plugins {\r\n  constructor(name: string) {\r\n    super(name)\r\n  }\r\n\r\n  public setup(): void {\r\n    system.run(() => {\r\n      world.sendMessage(`§7[§rConfig§r§7]§8:§r §bLoaded.§7.§r`)\r\n      loadPlugins()\r\n    })\r\n  }\r\n\r\n  public init(): void {\r\n    world.beforeEvents.chatSend.subscribe((ev) => {\r\n      if (ev.message == \"!plm-reset\") {\r\n        system.run(() => {\r\n          world.setDynamicProperty(\"pl-config\", JSON.stringify(allPlugins(true)))\r\n          world.getAllPlayers().forEach(pl => {\r\n            if (pl.isOp()) {\r\n              world.sendMessage(`§7[§rConfig§r§7]§8:§r §bReloaded§7.§r`)\r\n              loadPlugins(false)\r\n            }\r\n          })\r\n        })\r\n        ev.cancel = true;\r\n      } else if (ev.message == \"!plm-config\") {\r\n        system.run(() => {\r\n          showForm(ev.sender)\r\n        })\r\n        ev.cancel = true\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { world } from \"@minecraft/server\"\r\nimport allPlugins from \"../../../Configs/PluginConfigs\"\r\nimport Plugins from \"../../../Class/Plugins\"\r\n\r\nexport default function loadPlugins(init: boolean = true) {\r\n  allPlugins().filter(x => x.setting.isLoader !== true).forEach((x, i) => {\r\n    world.getAllPlayers().forEach(pl => {\r\n      if (pl.isOp()) {\r\n        if (x.setting.enabled) {\r\n          if (init) {\r\n            const pluginMain = new x.main(x.name) as Plugins\r\n            pluginMain.setup()\r\n            pluginMain.init()\r\n          }\r\n          pl.sendMessage(`§7[§r${x.name}§r§7]§8:§r §aEnabled§7.§r`)\r\n        } else {\r\n          pl.sendMessage(`§7[§r${x.name}§r§7]§8:§r §cDisabled§7.§r`)\r\n        }\r\n      }\r\n    })\r\n  })\r\n}","import { Player, system } from \"@minecraft/server\"\r\nimport { FormCancelationReason, ModalFormData } from \"@minecraft/server-ui\"\r\nimport allPlugins from \"../../../Configs/PluginConfigs\"\r\nimport loadPlugins from \"./LoadConfig\"\r\nimport setConfig from \"./SetConfig\"\r\n\r\nexport default function showForm(pl: Player) {\r\n  const ui = new ModalFormData()\r\n  ui.title(`§cPlugin §eManagers §8[Configs]`)\r\n  allPlugins().filter(x => !x.setting.isLoader).forEach(toggle => {\r\n    ui.toggle(toggle.name, toggle.setting.enabled)\r\n  })\r\n  ui.show(pl as any).then(async res => {\r\n    if (res.cancelationReason == FormCancelationReason.UserBusy) {\r\n      await new Promise((res) => system.runTimeout(res as any, 20))\r\n      showForm(pl)\r\n      return\r\n    }\r\n    allPlugins().filter(x => !x.setting.isLoader).forEach((pl, i) => {\r\n      console.warn(res.formValues[i])\r\n      setConfig(pl.name, res.formValues[i] as boolean)\r\n    })\r\n    loadPlugins(false)\r\n  })\r\n}","import { world } from \"@minecraft/server\"\r\nimport allPlugins from \"../../../Configs/PluginConfigs\"\r\nimport Plugins from \"../../../Interfaces/Plugin\"\r\n\r\nexport default function setConfig(name: string, bool: boolean) {\r\n  let config: Plugins[] = []\r\n    allPlugins().forEach((pl) => {\r\n      if (pl.name == name) {\r\n        config.push({ ...pl, setting: { ...pl.setting, enabled: bool } })\r\n      } else {\r\n        config.push(pl)\r\n      }\r\n    })\r\n    world.setDynamicProperty(\"pl-config\", JSON.stringify(config))\r\n}","import { Entity, EntityColorComponent, EntityDamageCause, EntityIsBabyComponent, MinecraftDimensionTypes, system, world } from \"@minecraft/server\";\r\nimport Plugins from \"../../Class/Plugins\";\r\nimport CustomEvents from \"../../Events/CustomEvent\";\r\nimport getEntitiesNearBy from \"./Functions/GetEntitiesNearBy\";\r\nimport { MobStackList } from \"./Configs/MobStackList\";\r\nimport ItemsToName from \"../ItemStacker/Functions/ItemToName\";\r\nimport EntityToName from \"./Functions/EntityToName\";\r\nimport spawnEntityClone from \"./Functions/SpawnEntityClone\";\r\n\r\nconst allEntities = new Set<Entity>()\r\nexport const resetEntities = new Set<Entity>()\r\n\r\nexport default class MobStacker extends Plugins {\r\n  private name: string\r\n  constructor(name: string) {\r\n    super(name)\r\n    this.name = name;\r\n  }\r\n\r\n  public setup(): void {\r\n\r\n  }\r\n\r\n  public init(): void {\r\n    new CustomEvents(this.name).EntityInteract((ev) => {\r\n      if (ev.target.nameTag && ev.target.nameTag.includes(\"§m§r§c\")) {\r\n        const currAmount = ((ev.target.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(ev.target.nameTag.split(\"§m§r§c\")[1]) : 1)\r\n        system.run(() => {\r\n          const entityNew = spawnEntityClone(ev.target)\r\n          ev.target.nameTag = ``\r\n          system.runTimeout(() => {\r\n            if (!ev.target.isValid()) return\r\n            resetEntities.delete(ev.target)\r\n          }, 100)\r\n          resetEntities.add(ev.target)\r\n          if (currAmount - 1 <= 0) return\r\n          entityNew.nameTag = `§e>> §m§r§c${currAmount - 1}§m§r§c§7x§r §7${EntityToName(entityNew)}`\r\n        })\r\n      }\r\n    })\r\n\r\n    new CustomEvents(this.name).EntityDie((ev) => {\r\n      if (ev.damageSource.cause == EntityDamageCause.none || ev.damageSource.cause == EntityDamageCause.selfDestruct) return;\r\n      if (ev.deadEntity.nameTag && ev.deadEntity.nameTag.includes(\"§m§r§c\")) {\r\n        const currAmount = ((ev.deadEntity.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(ev.deadEntity.nameTag.split(\"§m§r§c\")[1]) : 1)\r\n        if (currAmount - 1 <= 0) {\r\n          return;\r\n        } else {\r\n          const entityNew = spawnEntityClone(ev.deadEntity)\r\n          entityNew.nameTag = `§e>> §m§r§c${currAmount - 1}§m§r§c§7x§r §7${EntityToName(entityNew)}`\r\n        }\r\n      }\r\n    })\r\n\r\n    new CustomEvents(this.name).Tick(40, () => {\r\n      Object.keys(MinecraftDimensionTypes).forEach(async (dimid) => {\r\n        allEntities.clear()\r\n        world.getDimension(MinecraftDimensionTypes[dimid as \"nether\"]).getEntities().filter(x => !resetEntities.has(x)).filter(x => MobStackList.some(b => b == x.typeId)).forEach(en => {\r\n          allEntities.add(en)\r\n        })\r\n        for (const entity of allEntities) {\r\n          let removedAmount = 0;\r\n          const nearEntities = getEntitiesNearBy(entity.dimension, entity, 10);\r\n          if (!nearEntities || nearEntities.length === 0) {\r\n            continue;\r\n          }\r\n          for (const target of nearEntities) {\r\n            const amount = ((target.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(target.nameTag.split(\"§m§r§c\")[1]) : 1)\r\n            target.dimension.spawnParticle(\"minecraft:large_explosion\", { ...target.location, y: target.location.y + 0.5 })\r\n            target.remove();\r\n            removedAmount += amount\r\n          }\r\n          const currAmount = ((entity.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(entity.nameTag.split(\"§m§r§c\")[1]) : 1)\r\n          console.warn(removedAmount, currAmount)\r\n          entity.nameTag = `§e>> §m§r§c${removedAmount + currAmount}§m§r§c§7x§r §7${EntityToName(entity)}`\r\n          allEntities.clear()\r\n          world.getDimension(MinecraftDimensionTypes[dimid as \"nether\"]).getEntities().filter(x => !resetEntities.has(x)).filter(x => MobStackList.some(b => b == x.typeId)).forEach(en => {\r\n            allEntities.add(en)\r\n          })\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { Dimension, Entity } from \"@minecraft/server\";\r\nimport { MobStackList } from \"../Configs/MobStackList\";\r\nimport { resetEntities } from \"..\";\r\n\r\nexport default function getEntitiesNearBy(dimension: Dimension, en: Entity, raduis: number = 10) {\r\n  const allEn = dimension.getEntities({ location: en.location, maxDistance: raduis, type: en.typeId })\r\n    .filter((x) => x.id !== en.id)\r\n    .filter((x) => !resetEntities.has(x))\r\n    .filter((x) => x.hasComponent(\"is_baby\") == en.hasComponent(\"is_baby\"))\r\n    .filter((x) => (x.getVelocity().x + x.getVelocity().y + x.getVelocity().z) !== 0)\r\n    .filter((x) => !x.hasComponent(\"is_tamed\"))\r\n    .filter((x) => !x.getComponent(\"leashable\").leashHolder)\r\n    .filter((x) => x.getComponent(\"color\")?.value == en.getComponent(\"color\")?.value)\r\n  return allEn; \r\n}","export const MobStackList = [\r\n  \"minecraft:cow\",\r\n  \"minecraft:pig\",\r\n  \"minecraft:sheep\"\r\n]","import { Entity } from \"@minecraft/server\";\r\n\r\nexport default function EntityToName(en: Entity) {\r\n  return en.typeId.split(\":\")[1]\r\n    .split(\"_\")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n}","import { Entity, EntityIsBabyComponent } from \"@minecraft/server\";\r\n\r\nexport default function spawnEntityClone(en: Entity) {\r\n  const entityNew = en.dimension.spawnEntity(en.typeId, en.location)\r\n  if (entityNew.hasComponent(\"color\")) {\r\n    entityNew.getComponent(\"color\").value = en.getComponent(\"color\").value\r\n  }\r\n  if (en.hasComponent(EntityIsBabyComponent.componentId)) {\r\n    entityNew.triggerEvent(\"minecraft:entity_born\")\r\n  } else {\r\n    entityNew.triggerEvent(\"minecraft:ageable_grow_up\")\r\n  }\r\n\r\n  return entityNew\r\n}"],"mappings":"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","names":["system","world","ItemStack","system","world","world","world","world","world","world","world","data","world","system","player","x","world","system","x","ItemStack","system","world","world","world","system","world","config","world","res","system","pl","system","world","MinecraftDimensionTypes","system","world","system","MinecraftDimensionTypes","world","world","system"],"file":"../scripts/Index.js"}