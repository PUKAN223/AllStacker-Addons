{"version":3,"sources":["../../scripts/Index.ts","../../scripts/Configs/PluginConfigs.ts","../../scripts/Plugins/ItemStacker/index.ts","../../scripts/Class/Plugins.ts","../../scripts/Events/EntitySpawned/index.ts","../../scripts/Events/Tick/index.ts","../../scripts/Events/EntityRemoved/index.ts","../../scripts/Events/EntityDie/index.ts","../../scripts/Events/InteractEntity/index.ts","../../scripts/Events/onChatSend/index.ts","../../scripts/Events/ItemUse/index.ts","../../scripts/Events/CustomEvent.ts","../../scripts/Plugins/ItemStacker/Configs/Database.ts","../../scripts/Plugins/ItemStacker/Configs/con-database.js","../../scripts/Class/CommandBuilders.ts","../../scripts/Plugins/ItemStacker/Commands/CheckDB.ts","../../scripts/Plugins/ItemStacker/Commands/ClearData.ts","../../scripts/Plugins/ItemStacker/Functions/GetStackItem.ts","../../scripts/Plugins/ItemStacker/Functions/GetItemNearBy.ts","../../scripts/Plugins/ItemStacker/Functions/SeeingItem.ts","../../scripts/Plugins/ItemStacker/Functions/ItemToName.ts","../../scripts/Plugins/ItemStacker/Functions/GetTimeRemianing.ts","../../scripts/Plugins/PluginManagers/index.ts","../../scripts/Plugins/PluginManagers/Functions/LoadConfig.ts","../../scripts/Plugins/PluginManagers/Functions/SettingForms.ts","../../scripts/Plugins/PluginManagers/Functions/SetConfig.ts","../../scripts/Plugins/PluginManagers/Commands/PluginConfig.ts","../../scripts/Plugins/PluginManagers/Commands/PluginReset.ts","../../scripts/Plugins/MobStacker/index.ts","../../scripts/Plugins/MobStacker/Functions/GetEntitiesNearBy.ts","../../scripts/Plugins/MobStacker/Functions/EntityToName.ts","../../scripts/Plugins/MobStacker/Functions/SpawnEntityClone.ts","../../scripts/Plugins/CommandBuilders/index.ts","../../scripts/Plugins/ItemMenus/index.ts","../../scripts/Configs/SettingList.ts"],"sourcesContent":["import { system, world } from \"@minecraft/server\";\nimport allPlugins from \"./Configs/PluginConfigs\";\nimport Plugins from \"./Class/Plugins\";\n\nfunction main() {\n  allPlugins().filter(x => x.setting.isLoader == true).forEach((x, i) => {\n    const main = new x.main(x.name) as Plugins;\n    main.setup()\n    main.init()\n  })\n}\n\nworld.afterEvents.worldLoad.subscribe((ev) => {\n  system.run(main);\n})","import { world } from \"@minecraft/server\"\nimport Plugins from \"../Interfaces/Plugin\"\nimport ItemStacker from \"../Plugins/ItemStacker\"\nimport PluginManagers from \"../Plugins/PluginManagers\"\nimport MobStacker from \"../Plugins/MobStacker\"\nimport CommandBuilder from \"../Plugins/CommandBuilders/index\"\nimport ItemMenus from \"../Plugins/ItemMenus\"\n\nconst config = [\n  {\n    name: \"Plugin Managers\",\n    main: PluginManagers,\n    setting: {\n      enabled: true,\n      isLoader: true\n    }\n  },\n  {\n    name: \"Item Stackers\",\n    main: ItemStacker,\n    setting: {\n      enabled: true,\n      isLoader: false\n    }\n  },\n  {\n    name: \"Mob Stackers\",\n    main: MobStacker,\n    setting: {\n      enabled: true,\n      isLoader: false\n    }\n  },\n  {\n    name: \"Command Builders\",\n    main: CommandBuilder,\n    setting: {\n      enabled: true,\n      isLoader: true\n    }\n  },\n  {\n    name: \"ItemMenus\",\n    main: ItemMenus,\n    setting: {\n      enabled: true,\n      isLoader: true\n    }\n  }\n]\n\nfunction allPlugins(reset: boolean = false): Plugins[] {\n  if ((JSON.parse(world.getDynamicProperty(\"pl-config\") as string ?? \"[]\") as Plugins[]).length !== config.length) {\n    world.sendMessage(\"§7[§r§5Detected§r§7]§8:§r §7Configs §6Changed§7.§r\")\n    world.setDynamicProperty(\"pl-config\", JSON.stringify(config));\n  }\n  const configR: Plugins[] = []\n  config.forEach((pl, i) => {\n    configR.push({\n      name: reset ? pl.name : (world.getDynamicProperty(\"pl-config\") !== undefined ? (JSON.parse(world.getDynamicProperty(\"pl-config\") as string) as Plugins[])[i].name : pl.name),\n      main: pl.main,\n      setting: reset ? pl.setting : (world.getDynamicProperty(\"pl-config\") !== undefined ? (JSON.parse(world.getDynamicProperty(\"pl-config\") as string) as Plugins[])[i].setting : pl.setting),\n    })\n  })\n\n  return configR\n}\n\nexport default allPlugins\n","import { ItemStack, system, world } from \"@minecraft/server\";\nimport Plugins from \"../../Class/Plugins\";\nimport CustomEvents from \"../../Events/CustomEvent\";\nimport { isLoaded, ItemListStack, itemStackData } from \"./Configs/Database\";\nimport \"./Commands/CheckDB\";\nimport \"./Commands/ClearData\";\nimport { StackingItem } from \"./Functions/GetStackItem\";\nimport { SeeingItem } from \"./Functions/SeeingItem\";\n\nexport default class ItemStacker extends Plugins {\n  private name: string;\n  constructor(name: string) {\n    super(name);\n    this.name = name;\n  }\n\n  public setup(): void {\n    system.runJob(StackingItem());\n    system.runJob(SeeingItem());\n  }\n\n  public init(): void {\n    new CustomEvents(this.name).EntitySpawned((ev) => {\n      if (\n        ev.entity.typeId === \"minecraft:item\" &&\n        isLoaded &&\n        !itemStackData.has(ev.entity.id) &&\n        !ev.entity.hasTag(\"fakeItem\")\n      ) {\n        ItemListStack.add(ev.entity);\n      }\n    });\n\n    new CustomEvents(this.name).EntityRemoved((ev) => {\n      if (ev.removedEntity.typeId !== \"minecraft:item\" && !ev.removedEntity.hasTag(\"fakeItem\")) return;\n      const location = ev.removedEntity.location;\n      const dim = ev.removedEntity.dimension.id;\n      const id = ev.removedEntity.id;\n      system.run(() => {\n        const itemData = itemStackData.get(id) as { amount: number, item: ItemStack, life: number, currAmount: number };\n        if (!itemData) return;\n        const realAmount = itemData.amount - itemData.currAmount;\n        const itemToSpawn = itemData.amount - realAmount\n        if (itemToSpawn > 0) {\n          const itemStackSpawn = itemData.item;\n          itemStackSpawn.amount = Math.min(itemData.amount, itemData.item.maxAmount);\n          const enBase = world.getDimension(dim).spawnItem(itemStackSpawn, location);\n          enBase.teleport(location)\n          const itemSetData = itemData;\n          itemSetData.currAmount = (itemData.currAmount - Math.min(itemData.amount, itemData.item.maxAmount));\n          itemSetData.amount = itemSetData.currAmount + Math.min(itemData.amount, itemData.item.maxAmount)\n          itemStackData.set(enBase.id, itemSetData);\n        }\n        itemStackData.delete(id);\n      })\n    })\n  }\n}","import { world } from \"@minecraft/server\";\n\nexport default class Plugins {\n  private pluginName: string\n  constructor(name: string) {\n    this.pluginName = name;\n  }\n\n  public setup() {\n  }\n\n  public init() {\n  }\n}","import { EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\n\nexport default class CustomEntitySpawned {\n  constructor(enabled: string, callback: (ev: EntitySpawnAfterEvent) => void) {\n    world.afterEvents.entitySpawn.subscribe((ev) => {\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\n      callback(ev) \n    })\n  }\n}","import { EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, system, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\n\nexport default class CustomTick {\n  constructor(enabled: string, delay: number, callback: () => void) {\n    system.runInterval(() => {\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\n      callback() \n    }, delay)\n  }\n}","import { EntityRemoveBeforeEvent, EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\n\nexport default class CustomEntityRemoved {\n  constructor(enabled: string, callback: (ev: EntityRemoveBeforeEvent) => void) {\n    world.beforeEvents.entityRemove.subscribe((ev) => {\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\n      callback(ev) \n    })\n  }\n}","import { EntityDieAfterEvent, EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\n\nexport default class CustomEntityDie {\n  constructor(enabled: string, callback: (ev: EntityDieAfterEvent) => void) {\n    world.afterEvents.entityDie.subscribe((ev) => {\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\n      callback(ev) \n    })\n  }\n}","import { EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, PlayerInteractWithEntityBeforeEvent, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\n\nexport default class CustomEntityInteract {\n  constructor(enabled: string, callback: (ev: PlayerInteractWithEntityBeforeEvent) => void) {\n    world.beforeEvents.playerInteractWithEntity.subscribe((ev) => {\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\n      callback(ev) \n    })\n  }\n}","import { ChatSendBeforeEvent, ChatSendBeforeEventSignal, EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, PlayerInteractWithEntityBeforeEvent, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\n\nexport default class CustomOnChatSend {\n  constructor(enabled: string, callback: (ev: ChatSendBeforeEvent) => void) {\n    world.beforeEvents.chatSend.subscribe((ev) => {\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\n      callback(ev) \n    })\n  }\n}","import { EntitySpawnAfterEvent, EntitySpawnAfterEventSignal, ItemUseAfterEvent, PlayerInteractWithEntityBeforeEvent, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\n\nexport default class CustomItemUse {\n  constructor(enabled: string, callback: (ev: ItemUseAfterEvent) => void) {\n    world.afterEvents.itemUse.subscribe((ev) => {\n      if (!allPlugins().find(x => x.name == enabled).setting.enabled) return\n      callback(ev) \n    })\n  }\n}","import { ChatSendBeforeEvent, EntityDieAfterEvent, EntityRemoveBeforeEvent, EntitySpawnAfterEvent, ItemUseAfterEvent, ItemUseAfterEventSignal, PlayerInteractWithEntityBeforeEvent, world } from \"@minecraft/server\";\nimport CustomEntitySpawned from \"./EntitySpawned\";\nimport allPlugins from \"../Configs/PluginConfigs\";\nimport CustomTick from \"./Tick\";\nimport CustomEntityRemoved from \"./EntityRemoved\";\nimport CustomEntityDie from \"./EntityDie\";\nimport CustomEntityInteract from \"./InteractEntity\";\nimport CustomOnChatSend from \"./onChatSend\";\nimport CustomItemUse from \"./ItemUse\";\n\nexport default class CustomEvents {\n  private name: string\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  public EntitySpawned(callback: (ev: EntitySpawnAfterEvent) => void) {\n    new CustomEntitySpawned(this.name, callback)\n  }\n\n  public EntityRemoved(callback: (ev: EntityRemoveBeforeEvent) => void) {\n    new CustomEntityRemoved(this.name, callback)\n  }\n\n  public EntityDie(callback: (ev: EntityDieAfterEvent) => void) {\n    new CustomEntityDie(this.name, callback)\n  }\n\n  public EntityInteract(callback: (ev: PlayerInteractWithEntityBeforeEvent) => void) {\n    new CustomEntityInteract(this.name, callback)\n  }\n\n  public onChatSend(callback: (ev: ChatSendBeforeEvent) => void) {\n    new CustomOnChatSend(this.name, callback)\n  }\n\n  public Tick(delay: number, callback: () => void) {\n    new CustomTick(this.name, delay, callback)\n  }\n\n  public ItemUse(callback: (ev: ItemUseAfterEvent) => void) {\n    new CustomItemUse(this.name, callback);\n  } \n}","import { Entity, system, world } from \"@minecraft/server\";\r\nimport { Database } from \"../../../Utilities/Database\";\r\nimport { QIDB } from \"../../../Utilities/QIDB\";\r\nimport { DynamicTable, JsonDatabase, registryAPISerializers } from \"./con-database\";\r\n\r\nexport let itemStackData: JsonDatabase;\r\nexport let UnStackItem: JsonDatabase;\r\nexport let DisplayText: JsonDatabase;\r\nexport let UnStackMob: JsonDatabase\r\nexport let isLoaded: boolean = false;\r\nsystem.run(() => {\r\n  itemStackData = new JsonDatabase(\"ItemStacker\", world);\r\n  UnStackItem = new JsonDatabase(\"UnStackItem\", world);\r\n  DisplayText = new JsonDatabase(\"DisplayText\", world);\r\n  if (!DisplayText.has(\"itemStack\")) {\r\n    DisplayText.set(\"itemStack\", \"§7x§c%a §e%n§r\\n§7Respawn in %m§am §7%s§as§r\")\r\n  }\r\n  UnStackMob = new JsonDatabase(\"UnStackMob\", world);\r\n  if (UnStackMob.size == 0) {\r\n    UnStackMob.set(\"minecraft:pig\", true);\r\n    UnStackMob.set(\"minecraft:cow\", true);\r\n    UnStackMob.set(\"minecraft:chicken\", true);\r\n    UnStackMob.set(\"minecraft:sheep\", true);\r\n  }\r\n  isLoaded = true;\r\n})\r\nexport const ItemListStack = new Set<Entity>();\r\nexport const SeeingItem = new Set<Entity>();","import { world, World, Entity, system } from \"@minecraft/server\";\r\nimport * as mc from \"@minecraft/server\";\r\nconst mc_world = world;\r\nconst {setDynamicProperty: wSDP, getDynamicProperty: wGDP, getDynamicPropertyIds: wGDPI} = World.prototype;\r\nlet {isValid: isValidEntity, setDynamicProperty: eSDP, getDynamicProperty: eGDP, getDynamicPropertyIds: eGDPI} = Entity.prototype;\r\nconst DYNAMIC_DB_PREFIX = \"\\u1221\\u2112\";\r\nconst ROOT_CONTENT_TABLE_UUID = \"c0211201-0001-4001-8001-4f90af596647\";\r\nconst STRING_LIMIT = 32e3;\r\nconst TABLE_STRING_LENGTH = 31e3;\r\nconst GENERATOR_DESERIALIZER_SYMBOL = Symbol(\"DESERIALIZER\");\r\nconst eP = {\r\n    gDP: eGDP,\r\n    sDP: eSDP,\r\n    gDPI: eGDPI\r\n};\r\nconst wP = {\r\n    gDP: wGDP,\r\n    sDP: wSDP,\r\n    gDPI: wGDPI\r\n};\r\nclass DynamicSource {\r\n    /**@readonly @type {World | Entity} */\r\n    source;\r\n    /**@param {World | Entity} source  */\r\n    constructor(source){\r\n        this.source = source;\r\n        if(SOURCE_INSTANCES.has(source)) return SOURCE_INSTANCES.get(source);\r\n        if(source === mc_world) Object.assign(this, wP); else if (isValidEntity.call(source)) Object.assign(this, eP);\r\n        else throw new ReferenceError(\"Invald source type: \" + source);\r\n        SOURCE_INSTANCES.set(source, this);\r\n    }\r\n    /**@returns {string[]} */\r\n    getIds(){return this.gDPI.call(this.source);}\r\n    /**@param {string} key  @returns {number | boolean | string | import(\"@minecraft/server\").Vector3}*/\r\n    get(key){return this.gDP.call(this.source,key);}\r\n    /**@param {string} key */\r\n    set(key,value){ this.sDP.call(this.source, key, value);}\r\n    /**@param {string} key @returns {boolean}  */\r\n    delete(key){this.sDP.call(this.source, key, undefined); return true;}\r\n    /**@returns {boolean}  */\r\n    isValid(){ return this.source === world || isValidEntity.call(this.source); }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////   DYNAMIC DATABASE\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst SOURCE_INSTANCES = new WeakMap();\r\nconst DDB_SUBINSTANCES = new WeakMap();\r\nclass DynamicDatabase extends Map{\r\n    /**@readonly @private @type {DynamicSource} */\r\n    _source;\r\n    /**@readonly @private @type {string} */\r\n    _prefix;\r\n    /**@readonly @private @type {string} */\r\n    _prefixLength;\r\n    /**@readonly @private */\r\n    _STRINGIFY;\r\n    /**@readonly @private*/\r\n    _PARSE;\r\n    /** @private*/\r\n    _notDisposed;\r\n    /**@param {World | Entity} source @param {string} id @param {string} kind   */\r\n    constructor(source, id, kind, parser){\r\n        super();\r\n        this._source = new DynamicSource(source);\r\n        const PRE = `${kind}${DYNAMIC_DB_PREFIX}${id}${DYNAMIC_DB_PREFIX}`, LENGTH = PRE.length, SOURCE = this._source, PARSE = parser.parse;\r\n        const MAP_INSTANCES = DDB_SUBINSTANCES.get(SOURCE)??new Map;\r\n        if(MAP_INSTANCES.has(PRE)) return MAP_INSTANCES.get(PRE);\r\n        MAP_INSTANCES.set(PRE, this); DDB_SUBINSTANCES.set(SOURCE, MAP_INSTANCES);\r\n        if(!SOURCE.isValid()) throw new ReferenceError(\"Source is no longer valid: \" + SOURCE.source);\r\n        this._prefix = PRE;\r\n        this._prefixLength = LENGTH;\r\n        this._STRINGIFY = parser.stringify;\r\n        //this._PARSE = PARSE;\r\n        this._notDisposed = true;\r\n        for (const K of SOURCE.getIds()) if(K.startsWith(PRE)) {\r\n            const key = K.substring(LENGTH);\r\n            const value = SOURCE.get(K);\r\n            if(typeof value === \"string\") super.set(key, PARSE(value));\r\n        }\r\n    }\r\n    /**@param {string} key @param {any} value */\r\n    set(key, value){\r\n        if(!this.isValid()) throw new ReferenceError(\"This database instance is no longer valid\");\r\n        if(key.length + this._prefixLength > STRING_LIMIT) throw new TypeError(\"Key is too long: \" + key.length);\r\n        if(value === undefined) { \r\n            this.delete(key);\r\n            return this;\r\n        }\r\n        const data = this._STRINGIFY(value);\r\n        if(data.length > STRING_LIMIT) throw new TypeError(\"Size of data in string is too long: \" + data.length);\r\n        this._source.set(this._prefix + key, data);\r\n        return super.set(key,value);\r\n    }\r\n    /**@param {string} key  */\r\n    delete(key){\r\n        if(!this.isValid()) throw new ReferenceError(\"This database instance is no longer valid\");\r\n        if(!this.has(key)) return false;\r\n        this._source.delete(this._prefix + key);\r\n        return super.delete(key);\r\n    }\r\n    clear(){\r\n        if(!this.isValid()) throw new ReferenceError(\"This database instance is no longer valid\");\r\n        const P = this._prefix;\r\n        const s = this._source;\r\n        for(const key of this.keys()) s.delete(P + key);\r\n        return super.clear();\r\n    }\r\n    /**@returns {boolean} */\r\n    isValid(){return this._source.isValid() && this._notDisposed;}\r\n    dispose(){\r\n        this._notDisposed = false;\r\n        DDB_SUBINSTANCES.get(this._source)?.delete?.(this._prefix);\r\n        super.clear();\r\n    }\r\n    /**@readonly @type {boolean} */\r\n    get isDisposed(){return !this._notDisposed;}\r\n}\r\nclass DynamicWrapper {\r\n    \r\n    /**@readonly @private @type {Entity | World | ItemStack} */\r\n    _source;\r\n    /**@readonly @private @type {string} */\r\n    _prefix;\r\n    /**@readonly @private @type {string} */\r\n    _prefixLength;\r\n    /**@readonly @private */\r\n    _STRINGIFY;\r\n    /**@readonly @private*/\r\n    _PARSE;\r\n    /**@param {World | Entity} source @param {string} id @param {string} kind   */\r\n    constructor(source, id, kind, parser){\r\n        this._source = source;\r\n        const PRE = `${kind}${DYNAMIC_DB_PREFIX}${id}${DYNAMIC_DB_PREFIX}`, LENGTH = PRE.length;\r\n        this._prefix = PRE;\r\n        this._prefixLength = LENGTH;\r\n        this._STRINGIFY = parser.stringify;\r\n        this._PARSE = parser.parse;\r\n    }\r\n    clear(){ for( const k of this.__getKeys()) this._source.set(k, undefined); };\r\n    /**\r\n     * @returns true if an element in the Map existed and has been removed, or false if the element does not exist.\r\n     */\r\n    delete(key) {\r\n        const has = this.has(key);\r\n        this._source.set(this._prefix + key, undefined);\r\n        return has;\r\n    };\r\n    /**\r\n     * Executes a provided function once per each key/value pair in the Map, in insertion order.\r\n     * @param {(value: any, key: string, map: DynamicWrapper) => void} callbackfn \r\n     * @param {any} thisArg \r\n     */\r\n    forEach(callbackfn, thisArg = null){\r\n        for (const k of this.keys()) {\r\n            try {\r\n                callbackfn.call(thisArg??null, k, this.get(k), this);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.\r\n     * @returns Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned.\r\n     */\r\n    get(key){ const a = this._source.get(this._prefix + key); typeof a === \"string\"?this._PARSE(a):a; };\r\n    /**\r\n     * @returns boolean indicating whether an element with the specified key exists or not.\r\n     */\r\n    has(key){ return this._source.get(this._prefix + key)!==undefined; }\r\n    /**\r\n     * Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.\r\n     */\r\n    set(key, value){\r\n        this._source.set(this._prefix + key, this._STRINGIFY(value));\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns the number of elements in the Map.\r\n     */\r\n    get size(){return [...this.__getKeys()].length;};\r\n    /** Returns an iterable of entries in the map. */\r\n    [Symbol.iterator](){return this.entries();}\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the map.\r\n     */\r\n    *entries(){for( const k of this.__getKeys()) yield [k.substring(this._prefixLength),this._PARSE(this._source.get(k))]};\r\n    /**\r\n     * Returns an iterable of keys in the map\r\n     */\r\n    *keys(){for( const k of this.__getKeys()) yield k.substring(this._prefixLength);};\r\n    /**\r\n     * Returns an iterable of values in the map\r\n     */\r\n    *values(){for( const k of this.__getKeys()) yield this._PARSE(this._source.get(k));}\r\n    *__getKeys(){ for (const K of this._source.getIds()) if(K.startsWith(this._prefix)) yield K; }\r\n}\r\nclass JsonDatabase extends DynamicDatabase{ constructor(id, source = world){ super(source, id, \"JSON\", JSON); } }\r\nclass JSONDynamicWrapper extends DynamicWrapper{ constructor(id, source = world){ super(source, id, \"JSON\", JSON); } }\r\n\r\nclass DynamicProxy extends JsonDatabase{\r\n    constructor(id, source = world){\r\n        super(id, source);\r\n        return new Proxy(this,{\r\n            defineProperty(t,p,att){\r\n                if(att.value && typeof p === \"string\"){\r\n                    t.set(p,att.value);\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            deleteProperty(t,p){\r\n                if(typeof p === \"string\") return t.delete(p);\r\n                return false;\r\n            },\r\n            set(t, p, newValue){\r\n                if(typeof p === \"string\") {\r\n                    t.set(p, newValue);\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            get(t, p){\r\n                if(typeof p === \"string\") {\r\n                    return t.get(p)??Object.prototype[p];\r\n                }\r\n                return false;\r\n            },\r\n            getPrototypeOf(t){return Object.prototype;},\r\n            isExtensible(t){return true;},\r\n            setPrototypeOf(t){return false;},\r\n            has(t,k){return t.has(k);},\r\n            preventExtensions(t){return false;},\r\n            ownKeys(t){ return [...t.keys()]; },\r\n            getOwnPropertyDescriptor(t,k){\r\n                if(t.has(k)){\r\n                    return {value:t.get(k), enumerable: true, configurable: true, writable: true};\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////   COMPLEX DATABASE\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst PARSER_SYMBOL = Symbol(\"SERIALIZEABLE\");\r\nconst SERIALIZERS = new Map();\r\nconst DESERIALIZER_INFO = new WeakMap();\r\nconst ROOT_KEY = \"root::\" + ROOT_CONTENT_TABLE_UUID;\r\nconst TABLE_SOURCES = new WeakMap();\r\nconst TABLE_ID = new WeakMap();\r\nconst ID_TABLE = new WeakMap();\r\nconst TABLE_VALIDS = new WeakSet();\r\nlet isNativeCall = false;\r\nlet RootTable;\r\nfunction getRootTable(){\r\n    if(RootTable) return RootTable;\r\n    return RootTable = world.getDynamicProperty(ROOT_KEY)?DATABASE_MANAGER.deserialize(ROOT_KEY, new DynamicSource(world)):(()=>{\r\n        const source = new DynamicSource(world);\r\n        isNativeCall = true;\r\n        const value = new DynamicTable();\r\n        isNativeCall = false;\r\n        TABLE_SOURCES.set(value, source);\r\n        TABLE_ID.set(value, ROOT_KEY);\r\n        SetTable(source, ROOT_KEY, value);\r\n        TABLE_VALIDS.add(value);\r\n        DATABASE_MANAGER.serialize(ROOT_KEY, source, value);\r\n        return value;\r\n    })();\r\n}\r\n\r\nconst SerializableKinds = {\r\n    Boolean:\"c0211201-0001-4002-8001-4f90af596647\",\r\n    Number:\"c0211201-0001-4002-8002-4f90af596647\",\r\n    String:\"c0211201-0001-4002-8003-4f90af596647\",\r\n    Object:\"c0211201-0001-4002-8004-4f90af596647\",\r\n    DynamicTable: \"c0211201-0001-4002-8101-4f90af596647\"\r\n};\r\nSerializableKinds[SerializableKinds.Boolean] = \"Boolean\";\r\nSerializableKinds[SerializableKinds.Number] = \"Number\";\r\nSerializableKinds[SerializableKinds.String] = \"String\";\r\nSerializableKinds[SerializableKinds.Object] = \"Object\";\r\nSerializableKinds[SerializableKinds.DynamicTable] = \"DynamicTable\";\r\nconst Serializer = {\r\n    isSerializable(object){ return object[PARSER_SYMBOL] != undefined; },\r\n    getSerializerKind(object){ return object[PARSER_SYMBOL];},\r\n    isRegistredKind(kind){return SERIALIZERS.has(kind);},\r\n    setSerializableKind(object, kind){\r\n        if(SERIALIZERS.has(kind)){ object[PARSER_SYMBOL] = kind; return true; }\r\n        return false;\r\n    },\r\n    registrySerializer(kind, serializer, deserializer){\r\n        if(SERIALIZERS.has(kind)) throw new ReferenceError(\"Duplicate serialization kind: \" + kind);\r\n        if(typeof kind != \"string\") throw new TypeError(\"Kind must be type of string.\");\r\n        if(typeof serializer != \"function\" || typeof deserializer != \"function\") throw new TypeError(\"serializer or deserializer is not a function\");\r\n        SERIALIZERS.set(kind,{serializer,deserializer});\r\n        return kind;\r\n    },\r\n    getSerializer(kind){\r\n        return SERIALIZERS.get(kind)?.serializer??null;\r\n    },\r\n    getDeserializer(kind){\r\n        return SERIALIZERS.get(kind)?.deserializer??null;\r\n    },\r\n    getSerializers(kind){\r\n        const data = SERIALIZERS.get(kind);\r\n        if(!data) return null;\r\n        return {...data};\r\n    },\r\n    setSerializableClass(construct, kind, serializer, deserializer){\r\n        if(typeof serializer !== \"function\" || typeof deserializer !== \"function\") throw new TypeError(\"Serializer or deserializer is not a function\");\r\n        Serializer.registrySerializer(kind, function(obj){\r\n            if(obj == null) throw new TypeError(\"Null or Undefined is not possible to serialize.\");\r\n            return serializer(obj);\r\n        }, function(obj){\r\n            if(obj[GENERATOR_DESERIALIZER_SYMBOL] !== true) throw new TypeError(\"Null or Undefined is not possible to serialize.\");\r\n            return deserializer(obj);\r\n        });\r\n        Serializer.setSerializableKind(construct.prototype,kind);\r\n    },\r\n    getKindFromClass(construct){\r\n        return construct?.prototype?.[PARSER_SYMBOL]??null;\r\n    },\r\n    getSerializerKinds(){return SERIALIZERS.keys();},\r\n    overrideSerializers(kind, serializer, deserializer){\r\n        if(typeof kind != \"string\") throw new TypeError(\"Kind must be type of string.\");\r\n        if(typeof serializer != \"function\" || typeof deserializer != \"function\") throw new TypeError(\"serializer or deserializer is not a function\");\r\n        SERIALIZERS.set(kind,{serializer,deserializer});\r\n        return kind;\r\n    }\r\n}\r\nconst DATABASE_MANAGER = {\r\n    getHeader(rootRef, source){\r\n        const data = source.get(rootRef);\r\n        if(typeof data != \"string\") return null;\r\n        return JSONReadable(data);\r\n    },\r\n    serialize(rootRef, source, object){\r\n        if(!Serializer.isRegistredKind(Serializer.getSerializerKind(object))) throw new TypeError(\"object is not serializeable.\");\r\n        const kind = Serializer.getSerializerKind(object)\r\n        const serializer = Serializer.getSerializer(kind);\r\n        if(!serializer) throw new ReferenceError(\"No serializer for \" + kind);\r\n        return this.serializationResolver(\r\n            serializer(object, {kind,source,rootRef})\r\n            ,rootRef,source, kind\r\n        );\r\n    },\r\n    /**@param {Generator<object,any,string>} gen  */\r\n    serializationResolver(gen, rootRef, source, kind){\r\n        const oldHeader = this.getHeader(rootRef, source);\r\n        const prefix = rootRef + \"::\";\r\n        let oldLength = 0, newLength = 0;\r\n        if(oldHeader){\r\n            const [data] = oldHeader;\r\n            oldLength = parseInt(data[\"length\"],36);\r\n        }\r\n        try {\r\n            let genNext = gen.next();\r\n            if(!genNext.done) {\r\n                const headerData = genNext.value + \"\";\r\n                if(headerData.length > TABLE_STRING_LENGTH) gen.throw(new RangeError(\"Yielded stirng is too big: \" + headerData.length));\r\n                genNext = gen.next();\r\n                while (!genNext.done) {\r\n                    const key = prefix + newLength;\r\n                    try {\r\n                        source.set(key, genNext.value + \"\");\r\n                        newLength++;\r\n                    } catch (error) {\r\n                        gen.throw(error);\r\n                    }\r\n                    genNext = gen.next();\r\n                }\r\n                source.set(rootRef, JSONWritable({length:newLength.toString(36),kind},headerData));\r\n            }\r\n            return newLength;\r\n        }\r\n        catch(er){\r\n            Object.setPrototypeOf(er, DataCoruptionError.prototype);\r\n            er.source = source;\r\n            er.rootKey = rootRef;\r\n            throw er;\r\n        }\r\n        finally {\r\n            for (let i = newLength; i < oldLength; i++) source.delete(prefix + i);\r\n        }\r\n    },\r\n    deserialize(rootRef, source, header = undefined){\r\n        try {\r\n            const oldHeader = header??this.getHeader(rootRef, source);\r\n            if(!oldHeader) return null;\r\n            const prefix = rootRef + \"::\";\r\n            const [{length:le,kind}, data] = oldHeader;\r\n            let length = parseInt(le,36);\r\n            if(!Serializer.isRegistredKind(kind)) throw new ReferenceError(\"Unknown parser kind: \" + kind);\r\n            const deserializeResolver = Serializer.getDeserializer(kind);\r\n            if(!deserializeResolver) throw new ReferenceError(\"No deserializer for: \" + kind);\r\n            const deserializer = this.deserializer(source, rootRef, prefix, length, data);\r\n            DESERIALIZER_INFO.set(deserializer, {\r\n                source,\r\n                rootRef,\r\n                kind,\r\n                deserializeResolver,\r\n                oldHeader,\r\n                length,\r\n            });\r\n            return deserializeResolver(deserializer);\r\n        } catch (error) {\r\n            error.rootKey = rootRef;\r\n            error.source = source;\r\n            throw Object.setPrototypeOf(error, DataCoruptionError);\r\n        }\r\n    },\r\n    *deserializer(source, root, prefix, length, initial){\r\n        yield  initial;\r\n        let i = 0;\r\n        while(i < length){\r\n            const data = source.get(prefix + i);\r\n            if(!data) throw new DataCoruptionError(source, root, \"No continual data at index of \" + i);\r\n            yield data;\r\n            i++;\r\n        }\r\n    },\r\n    removeTree(rootRef, source){ \r\n        const oldHeader = this.getHeader(rootRef, source);\r\n        if(!oldHeader) return false;\r\n        const prefix = rootRef + \"::\";\r\n        const [{length:le}] = oldHeader;\r\n        let length = parseInt(le,36);\r\n        if(!isFinite(length)) return false;\r\n        for (let i = 0; i < length; i++) source.delete(prefix + i);\r\n        source.delete(rootRef);\r\n        return true;\r\n    }\r\n}\r\n\r\nObject.defineProperties(DATABASE_MANAGER.deserializer.prototype,Object.getOwnPropertyDescriptors({\r\n    [GENERATOR_DESERIALIZER_SYMBOL]: true,\r\n    return(){\r\n        return {done:true};\r\n    },\r\n    continue(){\r\n        return this.next(...arguments).value;\r\n    },\r\n    get source(){\r\n        if(!DESERIALIZER_INFO.has(this)) throw new ReferenceError(\"Object bound to prototype does not exist.\");\r\n        return DESERIALIZER_INFO.get(this).source;\r\n    },\r\n    get rootKey(){\r\n        if(!DESERIALIZER_INFO.has(this)) throw new ReferenceError(\"Object bound to prototype does not exist.\");\r\n        return DESERIALIZER_INFO.get(this).rootRef;\r\n    },\r\n    get length(){\r\n        if(!DESERIALIZER_INFO.has(this)) throw new ReferenceError(\"Object bound to prototype does not exist.\");\r\n        return DESERIALIZER_INFO.get(this).length;\r\n    },\r\n    get kind(){\r\n        if(!DESERIALIZER_INFO.has(this)) throw new ReferenceError(\"Object bound to prototype does not exist.\");\r\n        return DESERIALIZER_INFO.get(this).kind;\r\n    }\r\n}));\r\nclass DynamicTable extends Map{\r\n    /**@readonly */\r\n    static get KIND(){return \"c0211201-0001-4002-8101-4f90af596647\";}\r\n    /**@readonly @type {string} */\r\n    get tableId(){return TABLE_ID.get(this);}\r\n    constructor(){\r\n        if(!isNativeCall) throw new ReferenceError(\"No constructor for \" + DynamicTable.name);\r\n        super();\r\n    }\r\n    get(key){\r\n        if(!this.isValid()) throw new ReferenceError(\"Object bound to prototype doesn't not exist at [DynamicTable::get()].\");\r\n        if(!this.has(key)) return;\r\n        const source = TABLE_SOURCES.get(this);\r\n        const dataId = super.get(key);\r\n        return DATABASE_MANAGER.deserialize(dataId, source);\r\n    }\r\n    set(key, value){\r\n        if(!this.isValid()) throw new ReferenceError(\"Object bound to prototype doesn't not exist at [DynamicTable::get()].\");\r\n        if(value == null) throw new ReferenceError(\"You can not assign property to null or undefined\");\r\n        if(!Serializer.isRegistredKind(Serializer.getSerializerKind(value))) throw new TypeError(\"value is not serializeable.\");\r\n        if(value instanceof  DynamicTable) throw new TypeError(\"You can't set value as DynamicTable please use AddTable\");\r\n        const has = this.has(key);\r\n\r\n        const source = TABLE_SOURCES.get(this);\r\n\r\n        let newKey;\r\n        if(has){\r\n            newKey = super.get(key);\r\n            const header = DATABASE_MANAGER.getHeader(newKey, source);\r\n            if(header?.[0]?.kind === DynamicTable.KIND) {\r\n                const a = DATABASE_MANAGER.deserialize(newKey, source, header);\r\n                a.clear();\r\n                TABLE_VALIDS.delete(a);\r\n            }\r\n        }else{\r\n            newKey = \"k:\" + v4uuid()\r\n            super.set(key, newKey);\r\n            SaveState(this);\r\n        }\r\n        DATABASE_MANAGER.serialize(newKey, source, value);\r\n        return this;\r\n    }\r\n    clear(){\r\n        if(!this.isValid()) throw new ReferenceError(\"Object bound to prototype doesn't not exist at [DynamicTable::clear()].\");\r\n        const source = TABLE_SOURCES.get(this);\r\n        const KIND = DynamicTable.KIND;\r\n        for (const k of super.keys()) {\r\n            const dataId = super.get(k);\r\n            const header = DATABASE_MANAGER.getHeader(dataId,source);\r\n            if(header?.[0]?.kind === KIND) {\r\n                const a = DATABASE_MANAGER.deserialize(dataId, source, header);\r\n                a.clear();\r\n                TABLE_VALIDS.delete(a);\r\n            }\r\n            DATABASE_MANAGER.removeTree(dataId, source);\r\n        }\r\n        SaveState(this);\r\n        super.clear();\r\n    }\r\n    delete(key){ \r\n        if(!this.isValid()) throw new ReferenceError(\"Object bound to prototype doesn't not exist at [DynamicTable::delete()].\");\r\n        const source = TABLE_SOURCES.get(this);\r\n        if(!this.has(key)) return false;\r\n        const dataId = super.get(key);\r\n        const header = DATABASE_MANAGER.getHeader(dataId,source);\r\n        if(header?.[0]?.kind === DynamicTable.KIND) {\r\n            const a = DATABASE_MANAGER.deserialize(dataId, source, header);\r\n            a.clear();\r\n            TABLE_VALIDS.delete(a);\r\n        }\r\n        DATABASE_MANAGER.removeTree(dataId, source);\r\n        SaveState(this);\r\n        return super.delete();\r\n    }\r\n    *entries(){ \r\n        if(!this.isValid()) throw new ReferenceError(\"Object bound to prototype doesn't not exist at [DynamicTable::entries()].\");\r\n        for (const [k,v] of super.entries()) yield [k, this.get(k)];\r\n    }\r\n    [Symbol.iterator](){return this.entries();}\r\n    *values(){\r\n        if(!this.isValid()) throw new ReferenceError(\"Object bound to prototype doesn't not exist at [DynamicTable::values()].\");\r\n        for (const k of super.keys()) yield this.get(k);\r\n    }\r\n    isValid(){\r\n        return !!(TABLE_VALIDS.has(this) && TABLE_SOURCES.get(this)?.isValid?.());\r\n    }\r\n    /**@returns {DynamicTable} */\r\n    static OpenCreate(id){\r\n        let fromTable = getRootTable();\r\n        let a = fromTable.get(id);\r\n        if(a === undefined) {\r\n            if(!fromTable.isValid()) throw new ReferenceError(\"Object bound to prototype doesn't not exist at [DynamicTable::get()].\");\r\n            if(Map.prototype.has.call(fromTable,id)) throw new ReferenceError(\"Value of this key already exists\");\r\n            const source = TABLE_SOURCES.get(fromTable);\r\n            let newKey = \"t\" + v4uuid();\r\n            isNativeCall = true;\r\n            const value = new DynamicTable();\r\n            isNativeCall = false;\r\n            Map.prototype.set.call(fromTable, id, newKey);\r\n            SaveState(fromTable);\r\n            DATABASE_MANAGER.serialize(newKey, source, value);\r\n            TABLE_SOURCES.set(value, source);\r\n            TABLE_ID.set(value, newKey);\r\n            SetTable(source, newKey, value);\r\n            TABLE_VALIDS.add(value);\r\n            a = value;\r\n        }\r\n        else if(!(a instanceof DynamicTable)) throw new TypeError(`Value saved in ${id} is not a dynamic table.`);\r\n        return a;\r\n    }\r\n    static ClearAll(){ getRootTable().clear(); }\r\n    static getTableIds(){ return getRootTable().keys(); }\r\n    static DeleteTable(key){ return getRootTable().delete(key);}\r\n}\r\nfunction SaveState(table){\r\n    if(table._task === undefined) {\r\n        table._task = system.run(()=>{\r\n            table._task = undefined;\r\n            if(table.isValid()){\r\n                DATABASE_MANAGER.serialize(table.tableId, TABLE_SOURCES.get(table), table);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction GetTable(source, rootRef){ return ID_TABLE.get(source)?.get(rootRef); }\r\nfunction SetTable(source, rootRef, table){ \r\n    if(!ID_TABLE.has(source)) ID_TABLE.set(source,new Map());\r\n    ID_TABLE.get(source).set(rootRef, table);\r\n}\r\nclass DataCoruptionError extends ReferenceError{\r\n    constructor(source, rootKey, message){\r\n        super(message);\r\n        this.rootKey = rootKey;\r\n        this.source = source;\r\n    }\r\n    remove(){\r\n        if(!this.source.isValid()) throw new ReferenceError(\"Source is no longer valid\");\r\n        DATABASE_MANAGER.removeTree(this.rootKey, this.source);\r\n    }\r\n}\r\n\r\nSerializer.setSerializableClass(DynamicTable, DynamicTable.KIND, \r\n    function*(table){\r\n        let obj = {}, i = 0;\r\n        const get = Map.prototype.get, maxSize = 300;\r\n        yield Math.ceil(table.size / maxSize);\r\n        for(const key of table.keys()) {\r\n            if(++i >= maxSize){\r\n                yield JSON.stringify(obj);\r\n                i = 0, obj = {};\r\n            }\r\n            obj[key] = get.call(table,key);\r\n        }\r\n        if(i) yield JSON.stringify(obj);\r\n    },\r\n    function(n){\r\n        if(GetTable(n.source,n.rootKey)) return GetTable(n.source,n.rootKey);\r\n        isNativeCall = true;\r\n        const table = new DynamicTable();\r\n        isNativeCall = false;\r\n        TABLE_SOURCES.set(table, n.source);\r\n        TABLE_ID.set(table, n.rootKey);\r\n        SetTable(n.source, n.rootKey, table);\r\n        TABLE_VALIDS.add(table);\r\n        const set = Map.prototype.set;\r\n        const length = Number(n.continue());\r\n        for (let i = 0; i < length; i++) {\r\n            const data = n.continue();\r\n            if(!data) throw new DataCoruptionError(n.source,n.rootKey,\"Data for this dynamic table are corupted.\");\r\n            const obj = JSON.parse(data);\r\n            for(const k of Object.getOwnPropertyNames(obj)) set.call(table, k, obj[k]);\r\n        }\r\n        return table;\r\n    }\r\n);\r\nSerializer.setSerializableClass(Boolean, SerializableKinds.Boolean, function*(n){yield n;}, function(n){for(const a of n) return a===\"true\";});\r\nSerializer.setSerializableClass(Number, SerializableKinds.Number, function*(n){yield n;}, function(n){for(const a of n) return Number(a);});\r\nSerializer.setSerializableClass(String, SerializableKinds.String, \r\n    function*(n){\r\n        let length = n.length;\r\n        let cursor = 0;\r\n        let i = 0;\r\n        yield Math.ceil(length / TABLE_STRING_LENGTH);\r\n        while(length > 0){\r\n            const s = n.substring(cursor,cursor + TABLE_STRING_LENGTH);\r\n            const l = s.length;\r\n            if(l <= 0) return;\r\n            length -= l, cursor += l;\r\n            yield s;\r\n            i++;\r\n        }\r\n    }, \r\n    function(n){\r\n        const count = Number(n.continue());\r\n        const l = new Array(count);\r\n        for (let i = 0; i < count; i++) {\r\n            l[i] = n.continue();\r\n        }\r\n        return l.join(\"\");\r\n    }\r\n);\r\nSerializer.setSerializableClass(Object, SerializableKinds.Object,\r\n    function(n){ return Serializer.getSerializer(SerializableKinds.String)(JSON.stringify(n)); },\r\n    function(n){ return JSON.parse(Serializer.getDeserializer(SerializableKinds.String)(n)); }\r\n);\r\nfunction v4uuid(timestamp =  Date.now()){\r\n    const {random,floor} = Math;\r\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) =>{\r\n      let r = (timestamp + random() * 16) % 16 | 0;\r\n      timestamp = floor(timestamp / 16);\r\n      return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\nfunction Readable(text){\r\n    const size = text.charCodeAt(0);\r\n    const info = text.substring(1,1+size);\r\n    const data = text.substring(1+size);\r\n    return [info, data, size];\r\n}\r\nfunction JSONReadable(text){\r\n    const [info, data, size] = Readable(text);\r\n    return [JSON.parse(info), data, size];\r\n}\r\nfunction Writable(json, text){\r\n    return `${String.fromCharCode(json.length)}${json}${text}`;\r\n}\r\nfunction JSONWritable(json, text){ return Writable(JSON.stringify(json),text); };\r\n\r\nexport {JsonDatabase, DynamicProxy, DynamicTable, Serializer, DataCoruptionError, SerializableKinds};\r\n\r\nexport const APISerializableKinds = {\r\n    BlockType: \"c0211201-0001-4002-8201-4f90af596647\",\r\n    EntityType: \"c0211201-0001-4002-8202-4f90af596647\",\r\n    ItemType: \"c0211201-0001-4002-8203-4f90af596647\",\r\n    BlockPermutation: \"c0211201-0001-4002-8204-4f90af596647\",\r\n    ItemStack: \"c0211201-0001-4002-8205-4f90af596647\",\r\n    Vector: \"c0211201-0001-4002-8206-4f90af596647\",\r\n    \"c0211201-0001-4002-8201-4f90af596647\": \"BlockType\",\r\n    \"c0211201-0001-4002-8202-4f90af596647\": \"EntityType\",\r\n    \"c0211201-0001-4002-8203-4f90af596647\": \"ItemType\",\r\n    \"c0211201-0001-4002-8204-4f90af596647\": \"BlockPermutation\",\r\n    \"c0211201-0001-4002-8205-4f90af596647\": \"ItemStack\",\r\n    \"c0211201-0001-4002-8206-4f90af596647\": \"Vector\",\r\n}\r\nexport const registryAPISerializers = ()=>{\r\n    const {\r\n        BlockType, BlockTypes, BlockPermutation,\r\n        EntityType, EntityTypes,\r\n        ItemType, ItemTypes, ItemStack, Vector\r\n    } = mc;\r\n    const ItemStackSupportLevel = {\r\n        dynamicProperties: ItemStack.prototype.getDynamicProperty,\r\n        canPlaceOn: ItemStack.prototype.getCanPlaceOn,\r\n        canDestory: ItemStack.prototype.getCanDestroy,\r\n        lore: ItemStack.prototype.getLore,\r\n        lockMode: mc.ItemLockMode,\r\n        keepOnDeath: \"keepOnDeath\" in ItemStack.prototype,\r\n        components: ItemStack.prototype.getComponents,\r\n        enchantable: mc.ItemEnchantableComponent,\r\n        durability: mc.ItemDurabilityComponent,\r\n    }\r\n    for (const key in ItemStackSupportLevel) {\r\n        if (Object.hasOwnProperty.call(ItemStackSupportLevel, key)) {\r\n            const element = ItemStackSupportLevel[key];\r\n        }\r\n    }\r\n    const ItemStackComponentManager = {\r\n        serializers:{ },\r\n        deserializers:{ }\r\n    }\r\n    const {\r\n        serializers: ItemComponentSerializers,\r\n        deserializers: ItemComponentDeserializers\r\n    } = ItemStackComponentManager;\r\n    if(ItemStackSupportLevel.durability) {\r\n        ItemComponentSerializers[ItemStackSupportLevel.durability.componentId] = function(component){ return component.damage;};\r\n        ItemComponentDeserializers[ItemStackSupportLevel.durability.componentId] = function(component,v){ component.damage = v;};\r\n    }\r\n    if(ItemStackSupportLevel.enchantable){\r\n        ItemComponentSerializers[ItemStackSupportLevel.enchantable.componentId] = function(component){ return component.getEnchantments().map(e=>({t:e.type.id,l:e.level}));};\r\n        ItemComponentDeserializers[ItemStackSupportLevel.enchantable.componentId] = function(component,v){ component.addEnchantments(v.map(e=>({type:e.t,level:e.l})));};\r\n    }\r\n    \r\n    if(BlockTypes) Serializer.setSerializableClass(BlockType, APISerializableKinds.BlockType, function*(n){yield n.id;}, function(n){for(const a of n) return BlockTypes.get(a);});\r\n    if(EntityTypes) Serializer.setSerializableClass(EntityType, APISerializableKinds.EntityType, function*(n){yield n.id;}, function(n){for(const a of n) return EntityTypes.get(a);});\r\n    if(ItemTypes) Serializer.setSerializableClass(ItemType, APISerializableKinds.ItemType, function*(n){yield n.id;}, function(n){for(const a of n) return ItemTypes.get(a);});\r\n    \r\n    if(\"type\" in BlockPermutation.prototype) Serializer.setSerializableClass(BlockPermutation, APISerializableKinds.BlockPermutation, \r\n        function*(n){\r\n            yield n.type.id;\r\n            yield JSON.stringify(n.getAllStates());\r\n        }, \r\n        function(n){\r\n            const [typeId, states] = n;\r\n            return BlockPermutation.resolve(typeId, JSON.parse(states));\r\n        }\r\n    );\r\n    Serializer.setSerializableClass(ItemStack, APISerializableKinds.ItemStack,\r\n        function*(n){\r\n            const components = ItemStackSupportLevel.components?[...n.getComponents()].filter(e=>e && (e.typeId in ItemComponentSerializers)):[];\r\n            const canPlaceOn = ItemStackSupportLevel.canPlaceOn?n.getCanPlaceOn():[];\r\n            const canDestroy = ItemStackSupportLevel.canDestory?n.getCanDestroy():[];\r\n            const dynamicProperties = ItemStackSupportLevel.dynamicProperties?n.getDynamicPropertyIds():[];\r\n            yield JSON.stringify([\r\n                n.typeId, \r\n                n.amount, \r\n                ItemStackSupportLevel.keepOnDeath?n.keepOnDeath:false,\r\n                ItemStackSupportLevel.lockMode?n.lockMode:\"\",\r\n                typeof n.nameTag === \"string\",\r\n                components.length,\r\n                canPlaceOn.length,\r\n                canDestroy.length,\r\n                dynamicProperties.length\r\n            ]);\r\n            n.nameTag?yield n.nameTag:null;\r\n            yield JSON.stringify(ItemStackSupportLevel.lore?n.getLore():[]);\r\n            for (const com of components) yield JSON.stringify([com.typeId, ItemComponentSerializers[com.typeId](com)]);\r\n            yield * canPlaceOn;\r\n            yield * canDestroy;\r\n            for(const k of dynamicProperties) {\r\n                const data = JSON.stringify(n.getDynamicProperty(k));\r\n                if((data.length + k.length) > TABLE_STRING_LENGTH) throw new TypeError(`Dynamic property '${k}' of this item is too large'${data.length}'`);\r\n                yield Writable(k,data);\r\n            }\r\n        }, \r\n        function(n){\r\n            const [\r\n                typeId, amount, keepOnDeath, lockMode, hasNameTag, \r\n                componentsCount, canPlaceOnCount, canDestroyCount, dynamicPropertiesCount\r\n            ] = JSON.parse(n.continue());\r\n            const item = new ItemStack(typeId, amount);\r\n            if(ItemStackSupportLevel.keepOnDeath) item.keepOnDeath = keepOnDeath;\r\n            if(ItemStackSupportLevel.lockMode) item.lockMode = lockMode;\r\n            if(hasNameTag) item.nameTag = n.continue();\r\n            const lore = JSON.parse(n.continue());\r\n            if(ItemStackSupportLevel.lore) item.setLore(lore);\r\n            let i = componentsCount;\r\n            while(i--) {\r\n                const [id,data] = JSON.parse(n.continue());\r\n                ItemComponentDeserializers[id](item.getComponent(id), data);\r\n            }\r\n            i = canPlaceOnCount;\r\n            const canPlaceOn = [];\r\n            while(i--) canPlaceOn.push(n.continue());\r\n            i = canDestroyCount;\r\n            const canDestroy = [];\r\n            while(i--) canDestroy.push(n.continue());\r\n            item.setCanPlaceOn(canPlaceOn);\r\n            item.setCanDestroy(canDestroy);\r\n            i = dynamicPropertiesCount;\r\n            while(i--) {\r\n                const [k,sata] = Readable(n.continue());\r\n                item.setDynamicProperty(k,JSON.parse(sata));\r\n            }\r\n            return item;\r\n        }\r\n    );\r\n\r\n    if(Vector) Serializer.setSerializableClass(Vector, APISerializableKinds.Vector, function(s){const {x,y,z} = s; return Object.Serialize({x,y,z});}, function(n){const {x,y,z} = Object.Deserialize(n);return new Vector(x,y,z);})\r\n};","import { Player } from \"@minecraft/server\"\n\nexport interface commands {\n  name: string,\n  description: string,\n  permission: (pl: Player) => boolean,\n  callback: (pl: Player) => void,\n  prefix: string\n}\n\nexport const commandLists: commands[] = []\n\nexport default class CommandBuilder {\n  private name: string\n  private description: string\n  private permission: (pl: Player) => boolean\n  private prefix: string;\n  constructor(name: string, description: string, prefix: string, permission: (pl: Player) => boolean) { \n    this.name = name\n    this.description = description\n    this.permission = permission\n    this.prefix = prefix\n  }\n\n  public overload(callback: (pl: Player) => void) {\n    commandLists.push({\n      name: this.name,\n      description: this.description,\n      permission: this.permission,\n      callback: callback,\n      prefix: this.prefix\n    })\n  }\n}","import CommandBuilder, { commands } from \"../../../Class/CommandBuilders\"\nimport { ItemListStack, itemStackData } from \"../Configs/Database\"\n\nnew CommandBuilder(\n  \"checkDB\",\n  \"Use this command to check database of ItemStack\",\n  \"!\",\n  (pl) => {\n    return pl.isOp()\n  }\n).overload((pl) => {\n  pl.sendMessage(`data: ${itemStackData.size}\\nlist: ${ItemListStack.size}`)\n})","import CommandBuilder, { commands } from \"../../../Class/CommandBuilders\"\r\nimport { ItemListStack, itemStackData } from \"../Configs/Database\"\r\n\r\nnew CommandBuilder(\r\n  \"clearDB\",\r\n  \"Use this command to clear database of ItemStack\",\r\n  \"!\",\r\n  (pl) => {\r\n    return pl.isOp()\r\n  }\r\n).overload((pl) => {\r\n  itemStackData.clear();\r\n  ItemListStack.clear();\r\n  pl.sendMessage(`data: ${itemStackData.size}\\nlist: ${ItemListStack.size}`)\r\n})","import { Entity, ItemEnchantableComponent, ItemPotionComponent, system, world } from \"@minecraft/server\";\nimport { ItemListStack, itemStackData, UnStackItem } from \"../Configs/Database\";\nimport getItemNearBy from \"./GetItemNearBy\";\n\nexport function* StackingItem(): Generator<void, void, void> {\n  if (system.currentTick % 2 !== 0) {\n    for (const en of ItemListStack) {\n      if (!en.isValid) continue;\n      const item = en.getComponent(\"item\").itemStack;\n      let totalAmount = 0;\n      if (!(item.nameTag || item.hasComponent(ItemPotionComponent.componentId) || ([...UnStackItem.keys()].some(x => x == item.typeId)))) {\n        for (const target of getItemNearBy(en)) {\n          totalAmount += itemStackData.get(target.id).amount;\n          if (itemStackData.has(target.id)) itemStackData.delete(target.id)\n          if (ItemListStack.has(target)) ItemListStack.delete(target);\n          target.addTag(\"fakeItem\")\n          target.remove();\n        }\n      }\n      itemStackData.set(en.id, { amount: totalAmount + item.amount, item: item, life: system.currentTick, currAmount: totalAmount });\n      ItemListStack.delete(en)\n      yield;\n    }\n  } else {\n    for (const enData of itemStackData) {\n      const en = world.getDimension(\"overworld\").getEntities().filter(x => x.id == enData[0])[0]\n      if (en && en.isValid) {\n        const data = itemStackData.get(en.id)\n        const item = en.getComponent(\"item\").itemStack;\n        itemStackData.set(en.id, { amount: data.currAmount + item.amount, item: data.item, life: data.life, currAmount: data.currAmount });\n      }\n      yield;\n    }\n  }\n\n  system.run(() => system.runJob(StackingItem()));\n}","import { Entity, ItemEnchantableComponent } from \"@minecraft/server\";\nimport { itemStackData, UnStackItem } from \"../Configs/Database\";\n\nexport default function getItemNearBy(en: Entity, raduis: number = 7) {\n  const itemNearBy = en.dimension.getEntities({ \"maxDistance\": raduis, \"location\": en.location, \"type\": \"minecraft:item\" }).filter((x) => {\n    const item = en.getComponent(\"item\").itemStack;\n    const target = x.getComponent(\"item\").itemStack;\n    if ([...UnStackItem.keys()].some(x => x == target.typeId)) return false;\n    if (target.nameTag) return false\n    if (!itemStackData.has(x.id)) return false;\n    if (en.id == x.id) return false;\n    if (item.getLore().join(\",\") !== target.getLore().join(\",\")) return false;\n    if (item.typeId !== target.typeId) return false;\n    if (item.hasComponent(ItemEnchantableComponent.componentId) && target.hasComponent(ItemEnchantableComponent.componentId)) {\n      const itemEn = item.getComponent(ItemEnchantableComponent.componentId);\n      const targetEn = target.getComponent(ItemEnchantableComponent.componentId);\n      if ((itemEn.getEnchantments().map(x => x.type.id).join(\",\") == targetEn.getEnchantments().map(x => x.type.id).join(\",\"))) {\n        let isSame = true;\n        for (const ench of itemEn.getEnchantments()) {\n          if (ench.level !== targetEn.getEnchantment(ench.type).level) {\n            isSame = false;\n            break;\n          }\n        }\n        if (!isSame) return false;\n      } else return false;\n    }\n    return true;\n  })\n\n  return itemNearBy\n}","import { ItemEnchantableComponent, ItemStack, system, world } from \"@minecraft/server\";\r\nimport { DisplayText, isLoaded, ItemListStack, itemStackData } from \"../Configs/Database\";\r\nimport getItemNearBy from \"./GetItemNearBy\";\r\nimport ItemsToName from \"./ItemToName\";\r\nimport { getTimeRemaining } from \"./GetTimeRemianing\";\r\n\r\nexport function* SeeingItem(): Generator<void, void, void> {\r\n  const ListStack: string[] = [...itemStackData.keys()]\r\n  for (const pl of world.getAllPlayers()) {\r\n    const allEnititys = pl.dimension.getEntities({ type: \"minecraft:item\" }).filter(x => ListStack.some(d => d == x.id))\r\n    const filterEntitys = pl.dimension.getEntities({ maxDistance: 15, location: pl.location, type: \"minecraft:item\" }).filter(x => ListStack.some(d => d == x.id))\r\n\r\n    for (const en of filterEntitys) {\r\n      const itemData = itemStackData.get(en.id) as { amount: number, item: ItemStack, life: number };\r\n      if (itemData && en.isValid && isLoaded) {\r\n        const timeData = getTimeRemaining(5, 30, itemData.life)\r\n        let text = DisplayText.get(\"itemStack\") as string;\r\n        text = text.replace(/%a/g, `${itemData.amount}`)\r\n        text = text.replace(/%n/g, ItemsToName(en))\r\n        text = text.replace(/%m/g, `${Math.max(timeData.m, 0)}`)\r\n        text = text.replace(/%s/g, `${timeData.s}`)\r\n        en.nameTag = text;\r\n      }\r\n      yield;\r\n    }\r\n\r\n    for (const en of allEnititys) {\r\n      const itemData = itemStackData.get(en.id) as { amount: number, item: ItemStack, life: number };\r\n      if (itemData && en.isValid) {\r\n        const timeData = getTimeRemaining(5, 30, itemData.life)\r\n        if (timeData.m < 0) {\r\n          itemStackData.delete(en.id);\r\n          en.addTag(\"fakeItem\")\r\n          en.remove()\r\n        } else if (system.currentTick % 20 == 0) en.nameTag = ``;\r\n        yield;\r\n      }\r\n    }\r\n    yield;\r\n  }\r\n\r\n  system.runJob(SeeingItem())\r\n}","import { Entity } from \"@minecraft/server\";\n\nexport default function ItemsToName(entity: Entity) {\n  return entity.getComponent(\"item\").itemStack.nameTag ? entity.getComponent(\"item\").itemStack.nameTag : entity.getComponent(\"item\").itemStack.typeId\n    .split(\":\")[1]\n    .split(\"_\")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n}","import { system } from \"@minecraft/server\";\r\n\r\nexport function getTimeRemaining(minutes: number, seconds: number, referenceTick: number): { m: number, s: number } {\r\n  const now = system.currentTick;\r\n  const specifiedTimeTicks = (minutes * 60 + seconds) * 20;\r\n\r\n  const targetTick = referenceTick + specifiedTimeTicks;\r\n  let diffTicks = targetTick - now;\r\n\r\n  const diffMinutes = Math.floor(diffTicks / (20 * 60));\r\n  diffTicks -= diffMinutes * (20 * 60);\r\n  const diffSeconds = Math.floor(diffTicks / 20);\r\n\r\n  return { m: diffMinutes, s: diffSeconds };\r\n}","import { system, world } from \"@minecraft/server\";\nimport allPlugins from \"../../Configs/PluginConfigs\";\nimport Plugins from \"../../Class/Plugins\";\nimport loadPlugins from \"./Functions/LoadConfig\";\nimport showForm from \"./Functions/SettingForms\";\nimport \"./Commands/PluginConfig\"\nimport \"./Commands/PluginReset\"\n\nexport default class PluginManagers extends Plugins {\n  constructor(name: string) {\n    super(name)\n  }\n\n  public setup(): void {\n    system.run(() => {\n      world.sendMessage(`§7[§rConfig§r§7]§8:§r §bโหลดสำเร็จ.§7.§r`)\n    })\n  }\n\n  public init(): void {\n    function* run() {\n      if (world.getAllPlayers().length > 0) {\n        loadPlugins(true)\n      } else {\n        system.runJob(run())\n      }\n    }\n    system.runJob(run())\n  }\n}\n","import { world } from \"@minecraft/server\"\nimport allPlugins from \"../../../Configs/PluginConfigs\"\nimport Plugins from \"../../../Class/Plugins\"\n\nexport default function loadPlugins(init: boolean = true, log: boolean = true) {\n  for (let x of allPlugins().filter(x => x.setting.isLoader !== true)) {\n    world.getAllPlayers().forEach(pl => {\n      if (pl.isOp()) {\n        if (x.setting.enabled) {\n          if (init) {\n            const pluginMain = new x.main(x.name) as Plugins\n            pluginMain.setup()\n            pluginMain.init()\n          }\n          if (log) pl.sendMessage(`§7[§r${x.name}§r§7]§8:§r §aเปิดใช้งานเเล้ว§7.§r`)\n        } else {\n          if (log) pl.sendMessage(`§7[§r${x.name}§r§7]§8:§r §cปิดใช้งาน§7.§r`)\n        }\n      }\n    })\n  }\n}","import { Player, system } from \"@minecraft/server\"\nimport { FormCancelationReason, ModalFormData } from \"@minecraft/server-ui\"\nimport allPlugins from \"../../../Configs/PluginConfigs\"\nimport loadPlugins from \"./LoadConfig\"\nimport setConfig from \"./SetConfig\"\n\nexport default function showForm(pl: Player) {\n  const ui = new ModalFormData()\n  ui.title(`§cPlugin §eManagers §8[Configs]`)\n  allPlugins().filter(x => !x.setting.isLoader).forEach(toggle => {\n    ui.toggle(toggle.name, toggle.setting.enabled)\n  })\n  ui.show(pl).then(res => {\n    if (res.cancelationReason == FormCancelationReason.UserBusy) {\n      showForm(pl)\n      return\n    }\n    if (res.canceled) return\n    allPlugins().filter(x => !x.setting.isLoader).forEach((pl, i) => {\n      setConfig(pl.name, res.formValues[i] as boolean)\n    })\n    loadPlugins(false)\n  })\n}","import { world } from \"@minecraft/server\"\nimport allPlugins from \"../../../Configs/PluginConfigs\"\nimport Plugins from \"../../../Interfaces/Plugin\"\n\nexport default function setConfig(name: string, bool: boolean) {\n  let config: Plugins[] = []\n    allPlugins().forEach((pl) => {\n      if (pl.name == name) {\n        config.push({ ...pl, setting: { ...pl.setting, enabled: bool } })\n      } else {\n        config.push(pl)\n      }\n    })\n    world.setDynamicProperty(\"pl-config\", JSON.stringify(config))\n}","import CommandBuilder from \"../../../Class/CommandBuilders\";\nimport showForm from \"../Functions/SettingForms\";\n\nnew CommandBuilder(\n  \"plm-config\",\n  \"Use this command to show config forms.\",\n  \"!\",\n  (pl) => {\n    return true\n  }\n).overload((pl) => {\n  showForm(pl)\n})","import { world } from \"@minecraft/server\";\nimport CommandBuilder from \"../../../Class/CommandBuilders\";\nimport allPlugins from \"../../../Configs/PluginConfigs\";\nimport loadPlugins from \"../Functions/LoadConfig\";\n\nnew CommandBuilder(\n  \"plm-reset\",\n  \"Use this command to reset config.\",\n  \"!\",\n  (pl) => {\n    return pl.isOp()\n  }\n).overload((pl) => {\n  world.setDynamicProperty(\"pl-config\", JSON.stringify(allPlugins(true)))\n  world.getAllPlayers().forEach(pl => {\n    if (pl.isOp()) {\n      world.sendMessage(`§7[§rConfig§r§7]§8:§r §bReloaded§7.§r`)\n      loadPlugins(false)\n    }\n  })\n})","import { Entity, EntityColorComponent, EntityDamageCause, EntityIsBabyComponent, system, world } from \"@minecraft/server\";\nimport Plugins from \"../../Class/Plugins\";\nimport CustomEvents from \"../../Events/CustomEvent\";\nimport getEntitiesNearBy from \"./Functions/GetEntitiesNearBy\";\nimport EntityToName from \"./Functions/EntityToName\";\nimport spawnEntityClone from \"./Functions/SpawnEntityClone\";\nimport { UnStackMob } from \"../ItemStacker/Configs/Database\";\n\nconst allEntities = new Set<Entity>()\nexport const resetEntities = new Set<Entity>()\n\nexport default class MobStacker extends Plugins {\n  private name: string\n  constructor(name: string) {\n    super(name)\n    this.name = name;\n  }\n\n  public setup(): void {\n\n  }\n\n  public init(): void {\n    new CustomEvents(this.name).EntityInteract((ev) => {\n      if (ev.target.nameTag && ev.target.nameTag.includes(\"§m§r§c\")) {\n        const currAmount = ((ev.target.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(ev.target.nameTag.split(\"§m§r§c\")[1]) : 1)\n        system.run(() => {\n          const entityNew = spawnEntityClone(ev.target)\n          ev.target.nameTag = ``\n          system.runTimeout(() => {\n            if (!ev.target.isValid) return\n            resetEntities.delete(ev.target)\n          }, 300)\n          resetEntities.add(ev.target)\n          if (currAmount - 1 <= 0) return\n          entityNew.nameTag = `§e>> §m§r§c${currAmount - 1}§m§r§c§7x§r §7${EntityToName(entityNew)}`\n        })\n      }\n    })\n\n    new CustomEvents(this.name).EntityDie((ev) => {\n      if (ev.damageSource.cause == EntityDamageCause.none || ev.damageSource.cause == EntityDamageCause.selfDestruct) return;\n      if (ev.deadEntity.nameTag && ev.deadEntity.nameTag.includes(\"§m§r§c\")) {\n        const currAmount = ((ev.deadEntity.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(ev.deadEntity.nameTag.split(\"§m§r§c\")[1]) : 1)\n        if (currAmount - 1 <= 0) {\n          return;\n        } else {\n          const entityNew = spawnEntityClone(ev.deadEntity)\n          entityNew.nameTag = `§e>> §m§r§c${currAmount - 1}§m§r§c§7x§r §7${EntityToName(entityNew)}`\n        }\n      }\n    })\n\n    new CustomEvents(this.name).Tick(40, () => {\n      [\"overworld\", \"nether\", \"the_end\"].forEach(async (dimid) => {\n        allEntities.clear()\n        world.getDimension(dimid).getEntities().filter(x => !resetEntities.has(x)).filter(x => [...UnStackMob.keys()].some(b => b == x.typeId)).forEach(en => {\n          allEntities.add(en)\n        })\n        for (const entity of allEntities) {\n          let removedAmount = 0;\n          const nearEntities = getEntitiesNearBy(entity.dimension, entity, 10);\n          if (!nearEntities || nearEntities.length === 0) {\n            continue;\n          }\n          for (const target of nearEntities) {\n            const amount = ((target.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(target.nameTag.split(\"§m§r§c\")[1]) : 1)\n            target.dimension.spawnParticle(\"minecraft:large_explosion\", { ...target.location, y: target.location.y + 0.5 })\n            target.remove();\n            removedAmount += amount\n          }\n          const currAmount = ((entity.nameTag ?? \"\").includes(\"§m§r§c\") ? parseInt(entity.nameTag.split(\"§m§r§c\")[1]) : 1)\n          entity.nameTag = `§e>> §m§r§c${removedAmount + currAmount}§m§r§c§7x§r §7${EntityToName(entity)}`\n          allEntities.clear()\n          world.getDimension(dimid).getEntities().filter(x => !resetEntities.has(x)).filter(x => [...UnStackMob.keys()].some(b => b == x.typeId)).forEach(en => {\n            allEntities.add(en)\n          })\n        }\n      })\n    })\n  }\n}\n","import { Dimension, Entity } from \"@minecraft/server\";\nimport { resetEntities } from \"..\";\n\nexport default function getEntitiesNearBy(dimension: Dimension, en: Entity, raduis: number = 10) {\n  const allEn = dimension.getEntities({ location: en.location, maxDistance: raduis, type: en.typeId })\n    .filter((x) => x.id !== en.id)\n    .filter((x) => !resetEntities.has(x))\n    .filter((x) => x.hasComponent(\"is_baby\") == en.hasComponent(\"is_baby\"))\n    .filter((x) => (x.getVelocity().x + x.getVelocity().y + x.getVelocity().z) !== 0)\n    .filter((x) => !x.hasComponent(\"is_tamed\"))\n    .filter((x) => !x.getComponent(\"leashable\").leashHolder)\n    .filter((x) => x.getComponent(\"color\")?.value == en.getComponent(\"color\")?.value)\n    .filter((x) => {\n      if ((x.nameTag && en.nameTag) && (x.nameTag.includes(\"§m§r§c\") && en.nameTag.includes(\"§m§r§c\"))) return true\n      if (!(x.nameTag && en.nameTag)) return true;\n      return false;\n    })\n  return allEn;\n}","import { Entity } from \"@minecraft/server\";\n\nexport default function EntityToName(en: Entity) {\n  return en.typeId.split(\":\")[1]\n    .split(\"_\")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n}","import { Entity, EntityIsBabyComponent } from \"@minecraft/server\";\n\nexport default function spawnEntityClone(en: Entity) {\n  const entityNew = en.dimension.spawnEntity(en.typeId, en.location)\n  if (entityNew.hasComponent(\"color\")) {\n    entityNew.getComponent(\"color\").value = en.getComponent(\"color\").value\n  }\n  if (en.hasComponent(EntityIsBabyComponent.componentId)) {\n    entityNew.triggerEvent(\"minecraft:entity_born\")\n  } else {\n    entityNew.triggerEvent(\"minecraft:ageable_grow_up\")\n  }\n\n  return entityNew\n}","import { system } from \"@minecraft/server\";\nimport { commandLists } from \"../../Class/CommandBuilders\";\nimport CustomEvents from \"../../Events/CustomEvent\";\nimport Plugins from \"../../Class/Plugins\";\n\nexport default class CommandBuilder extends Plugins {\n  private name: string\n  constructor(name: string) {\n    super(name)\n    this.name = name;\n  }\n\n  public setup(): void {\n    \n  }\n\n  public init(): void {\n    new CustomEvents(this.name).onChatSend((ev) => {\n      if (ev.message.slice(1, ev.message.length) == \"help\") {\n        ev.sender.sendMessage(`${commandLists.map(x => `§c${x.prefix}§7${x.name} §r§c- §7${x.description}§r`).join(\"\\n\")}`)\n        ev.cancel = true\n      } else if (commandLists.some(x => `${x.prefix}${x.name}` == ev.message)) {\n        const command = commandLists.find(x => `${x.prefix}${x.name}` == ev.message)\n        system.run(() => {\n          if (command.permission(ev.sender)) {\n            command.callback(ev.sender)\n          } else {\n            ev.sender.sendMessage(`§cYou dont have permission to use this command.`)\n          }\n        })\n        \n        ev.cancel = true\n      }\n    })\n  }\n}\n","import { ItemStack, Player, system, world } from \"@minecraft/server\";\r\nimport Plugins from \"../../Class/Plugins\";\r\nimport CustomEvents from \"../../Events/CustomEvent\";\r\nimport { ActionFormData } from \"@minecraft/server-ui\";\r\nimport allPlugins from \"../../Configs/PluginConfigs\";\r\nimport { ListSetting } from \"../../Configs/SettingList\";\r\n\r\nexport default class ItemMenus extends Plugins {\r\n  private name: string;\r\n  constructor(name: string) {\r\n    super(name);\r\n    this.name = name;\r\n  }\r\n\r\n  public setup(): void {\r\n  }\r\n\r\n  public init(): void {\r\n    new CustomEvents(this.name).ItemUse((ev) => {\r\n      if (ev.itemStack.typeId == \"kisu:ac_setting\") {\r\n        ListSystems(ev.source)\r\n        ev.source.playSound(\"random.pop\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function ListSystems(pl: Player) {\r\n  const listUi = new ActionFormData()\r\n  listUi.title(\"การตั้งค่าระบบ\");\r\n  listUi.body(` \\n §eสวัสดี§7, §f${pl.name}\\n §7คุณสามารถ§cตั้งค่า§7ระบบต่างๆได้ผ่านเมนูนี้\\n\\n`);\r\n  allPlugins().forEach((plg, i) => {\r\n    if (!plg.setting.isLoader) {\r\n      listUi.button(`${plg.name} [${plg.setting.enabled ? \"§2กำลังเปิดใช้งาน§r\" : \"§cปิดใช้งานเเล้ว§r\"}]`, (i % 2 == 0 ? `textures/ui/ImpulseSquare` : `textures/ui/ChainSquare`))\r\n    }\r\n  })\r\n  listUi.button(\"§cปิด\")\r\n  listUi.show(pl).then((res) => {\r\n    if (res.canceled) return;\r\n    if (res.selection !== allPlugins().filter(x => x.setting.isLoader == false).length) {\r\n      SettingSystems(pl, res.selection)\r\n    }\r\n  })\r\n}\r\n\r\nexport function SettingSystems(pl: Player, selected: number) {\r\n  const listUi = new ActionFormData()\r\n  const data = Object.keys(ListSetting)[selected];\r\n  listUi.title(`§8การตั้งค่าระบบ §f| §2${data}§r`);\r\n  listUi.body(` \\n §eสวัสดี§7, §f${pl.name}\\n §7คุณสามารถ§cตั้งค่า§7ระบบต่างๆได้ผ่านเมนูนี้§r\\n\\n`);\r\n  Object.keys(ListSetting[data as \"Item Stackers\"](data, pl)).forEach((key) => {\r\n    if (ListSetting[data as \"Item Stackers\"](data, pl)[key]() == null) {\r\n      listUi.button(key, \"textures/ui/settings_glyph_color_2x\")\r\n    } else {\r\n      listUi.button(ListSetting[data as \"Item Stackers\"](data, pl)[key]().split(\":\")[0], ListSetting[data as \"Item Stackers\"](data, pl)[key]().split(\":\")[1])\r\n    }\r\n  })\r\n  listUi.button(\"§cกลับ\")\r\n  listUi.show(pl).then((res) => {\r\n    if (res.canceled) return;\r\n    if (res.selection == Object.keys(ListSetting[data as \"Item Stackers\"](data, pl)).length) {\r\n      ListSystems(pl)\r\n      return;\r\n    } else {\r\n      ListSetting[data as \"Item Stackers\"](data, pl)[Object.keys(ListSetting[data as \"Item Stackers\"](data, pl))[res.selection]](true);\r\n      return;\r\n    }\r\n  })\r\n}","import { ActionFormData, MessageFormData, ModalFormData } from \"@minecraft/server-ui\";\r\nimport { Player, system } from \"@minecraft/server\";\r\nimport setConfig from \"../Plugins/PluginManagers/Functions/SetConfig\";\r\nimport allPlugins from \"./PluginConfigs\";\r\nimport { SettingSystems } from \"../Plugins/ItemMenus\";\r\nimport { DisplayText, UnStackItem, UnStackMob } from \"../Plugins/ItemStacker/Configs/Database\";\r\nimport CustomEvents from \"../Events/CustomEvent\";\r\n\r\nconst MobAdd = new Map<Player, string>()\r\n\r\nnew CustomEvents(\"Plugin Managers\").EntityInteract((ev) => {\r\n  if (ev.player.hasTag(\"mobAdders\")) {\r\n    MobAdd.set(ev.player, ev.target.typeId);\r\n  }\r\n})\r\n\r\nconst formatName = (id: string): string =>\r\n  id.split(\":\")[1]\r\n    .split(\"_\")\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n\r\nconst togglePlugin = (name: string, pl: Player, enabled: boolean, callback: () => void): void => {\r\n  if (!enabled) {\r\n    const state = !enabled;\r\n    setConfig(name, state);\r\n    pl.sendMessage(`§7[§f${name}§7]§r§f:§r ${state ? \"§aเปิดใช้งาน\" : \"§cปิดใช้งาน\"}§7สำเร็จ หากไม่ทำงานให้§cออกเกมเข้าใหม่อีกรอบ§r`);\r\n    allPlugins();\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  const ui = new MessageFormData()\r\n    .title(\"§8ปิดระบบ\")\r\n    .body(`\\n§7คุณแน่ใจหรือไม่ว่าต้องการ§cปิด§7การใช้งานการรวม${name.includes(\"Item\") ? \"ไอเท็ม\" : \"ม็อบ\"}\\nหาก§cปิด§7ใช้งาน ${name.includes(\"Item\") ? \"ไอเท็ม\" : \"ม็อบ\"}ที่รวมกันอยู่จะไม่ทำงาน`)\r\n    .button1(\"§2ยืนยัน\")\r\n    .button2(\"§cย้อนกลับ\");\r\n\r\n  ui.show(pl).then(res => {\r\n    if (res.canceled) return;\r\n    if (res.selection === 1) {\r\n      SettingSystems(pl, 0);\r\n    } else {\r\n      const state = !enabled;\r\n      setConfig(name, state);\r\n      pl.sendMessage(`§7[§f${name}§7]§r§f:§r ${state ? \"§aเปิดใช้งาน\" : \"§cปิดใช้งาน\"}§7สำเร็จ หากไม่ทำงานให้§cออกเกมเข้าใหม่อีกรอบ§r`);\r\n      allPlugins();\r\n    }\r\n  });\r\n};\r\n\r\nexport const ListSetting = {\r\n  \"Item Stackers\": (name: string, pl: Player) => ({\r\n    [`§cปิดการใช้งาน ${name}`]: (bool: boolean = false): null | string => {\r\n      if (bool) togglePlugin(name, pl, allPlugins().find(x => x.name === name).setting.enabled, () => { });\r\n      return allPlugins().find(x => x.name === name).setting.enabled\r\n        ? `§cปิด§8การใช้งาน ${name}`\r\n        : `§2เปิด§8การใช้งาน ${name}`;\r\n    },\r\n\r\n    \"รายชื่อไอเท็มที่ไม่รวมกัน\": (bool: boolean = false): null | string => {\r\n      if (bool) {\r\n        const items = [...UnStackItem.keys()];\r\n        pl.sendMessage(items.length === 0\r\n          ? \"§cไม่มีรายชื่อไอเท็ม\"\r\n          : `§7รายชื่อไอเท็ม§f:\\n§f  -§e${items.map(formatName).join(\"§r\\n  §f-§e\")}`);\r\n      }\r\n      return null;\r\n    },\r\n\r\n    \"เพิ่มรายชื่อไอเท็มที่ไม่รวมกัน\": (bool: boolean = false): null | string => {\r\n      if (bool) {\r\n        const selectItem = () => {\r\n          pl.onScreenDisplay.setActionBar(\"§7กรุณานำไอเท็มที่จะเพิ่มไว้ในช่อง§cสล็อตแรก§7แล้ว§cกดย่อ§7\");\r\n          if (pl.isSneaking) {\r\n            const item = pl.getComponent(\"inventory\").container.getItem(0);\r\n            if (item) {\r\n              pl.playSound(\"random.pop\");\r\n              UnStackItem.set(item.typeId, true);\r\n              pl.sendMessage(`§7[§f${name}§7]§r§f:§r §aเพิ่ม§7ไอเท็ม §e${formatName(item.typeId)} §7สำเร็จ§r`);\r\n            }\r\n          } else {\r\n            system.run(selectItem);\r\n          }\r\n        };\r\n        system.run(selectItem);\r\n      }\r\n      return null;\r\n    },\r\n\r\n    \"ลบรายชื่อไอเท็มที่ไม่รวมกัน\": (bool: boolean = false): null | string => {\r\n      if (bool) {\r\n        const items = [...UnStackItem.keys()];\r\n        const ui = new ActionFormData()\r\n          .title(\"ลบรายชื่อไอเท็ม\")\r\n          .body(\"\\n กรุณาเลือกไอเท็มที่จะลบ\\n \");\r\n        items.map(formatName).forEach(btn => ui.button(btn));\r\n        ui.button(\"กลับ\");\r\n\r\n        ui.show(pl).then(res => {\r\n          if (res.canceled || res.selection === items.length) return SettingSystems(pl, 0);\r\n\r\n          const selectedItem = items[res.selection];\r\n          const confirm = new MessageFormData()\r\n            .title(\"ลบรายชื่อไอเท็ม\")\r\n            .body(`คุณยืนยันที่จะลบไอเท็มนี้ ${formatName(selectedItem)}\\nเพื่อให้กลับมาสามารถรวมกันได้ใช่หรือไม่`)\r\n            .button1(\"§2ยืนยัน\")\r\n            .button2(\"§cย้อนกลับ\");\r\n\r\n          confirm.show(pl).then(res => {\r\n            if (res.canceled) return;\r\n            if (res.selection === 0) {\r\n              UnStackItem.delete(selectedItem);\r\n              pl.sendMessage(`§7[§f${name}§7]§r§f:§r §aลบ§7ไอเท็ม §e${formatName(selectedItem)} §7สำเร็จ§r`);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      return null;\r\n    },\r\n\r\n    \"ตั้งค่าการเเสดงผลจำนวนไอเท็ม\": (bool: boolean = false): null | string => {\r\n      if (bool) {\r\n        const ui = new ModalFormData()\r\n          .title(\"ตั้งค่าการเเสดงผล\")\r\n          .label(\"\\n ใช้ %%a เพื่อเเสดงจำนวน\\n ใช้ %%n เพื่อเเสดงชื่อไอเท็ม\\n ใช้ %%m เพื่อเเสดงนาทีที่ไอเท็มจะถูกลบ\\n ใช้ %%s เพื่อเเสดงวินาทีที่ไอเท็มจะถูกลบ\\n ใช้ \\\\n เพื่อเว้นบรรทัด\")\r\n          .divider()\r\n          .textField(\"รูปเเบบการเเสดง\", \"\", DisplayText.get(\"itemStack\") ?? \"§7x§c%a §e%n§r\\\\n§7Respawn in %m§am §7%s§as§r\")\r\n          .toggle(\"รีเซ็ตการตั้งค่า\", false);\r\n\r\n        ui.show(pl).then(res => {\r\n          if (res.canceled) return;\r\n          const [displayFormat, reset] = res.formValues;\r\n          if (reset) {\r\n            DisplayText.set(\"itemStack\", \"§7x§c%a §e%n§r\\n§7Respawn in %m§am §7%s§as§r\");\r\n            pl.sendMessage(\"§aรีเซ็ทตั้งค่าสำเร็จ§r\");\r\n          } else {\r\n            DisplayText.set(\"itemStack\", displayFormat);\r\n            pl.sendMessage(\"§aตั้งค่าสำเร็จ§r\");\r\n          }\r\n        });\r\n      }\r\n      return null;\r\n    }\r\n  }),\r\n\r\n  \"Mob Stackers\": (name: string, pl: Player) => {\r\n    return {\r\n      [`§cปิดการใช้งาน ${name}`]: (bool: boolean = false): null | string => {\r\n        if (bool) togglePlugin(name, pl, allPlugins().find(x => x.name === name).setting.enabled, () => { });\r\n        return allPlugins().find(x => x.name === name).setting.enabled\r\n          ? `§cปิด§8การใช้งาน ${name}`\r\n          : `§2เปิด§8การใช้งาน ${name}`;\r\n      },\r\n\r\n      \"รายชื่อม็อบที่รวมกัน\": (bool: boolean = false): null | string => {\r\n        if (bool) {\r\n          const mobs = [...UnStackMob.keys()];\r\n          pl.sendMessage(mobs.length === 0\r\n            ? \"§cไม่มีรายชื่อม็อบ\"\r\n            : `§7รายชื่อม็อบ§f:\\n§f  -§e${mobs.map(formatName).join(\"§r\\n  §f-§e\")}`);\r\n        }\r\n        return null;\r\n      },\r\n\r\n      \"เพิ่มรายชื่อม็อบที่รวมกัน\": (bool: boolean = false): null | string => {\r\n        if (bool) {\r\n          pl.addTag(\"mobAdders\")\r\n          function mobAdder() {\r\n            pl.onScreenDisplay.setActionBar(\"§cคลิกค้างที่ม็อบ§7เพื่อเพิ่มหรือ§cกดย่อ§7เพิ่มยกเลิก\")\r\n            if (pl.isSneaking) return;\r\n            if (MobAdd.has(pl)) {\r\n              UnStackMob.set(MobAdd.get(pl), true);\r\n              pl.sendMessage(`§7[§f${name}§7]§r§f:§r §aเพิ่ม§7ม็อบ §e${formatName(MobAdd.get(pl))} §7สำเร็จ§r`);\r\n              MobAdd.delete(pl)\r\n              pl.removeTag(\"mobAdders\")\r\n            } else {\r\n              system.run(mobAdder)\r\n            }\r\n          }\r\n          system.run(mobAdder)\r\n        }\r\n        return null;\r\n      },\r\n\r\n      \"ลบรายชื่อม็อบที่รวมกัน\": (bool: boolean = false): null | string => {\r\n        if (bool) {\r\n          const mobs = [...UnStackMob.keys()];\r\n          const ui = new ActionFormData()\r\n            .title(\"ลบรายชื่อม็อบ\")\r\n            .body(\"\\n กรุณาเลือกม็อบที่จะลบ\\n \");\r\n          mobs.map(formatName).forEach(btn => ui.button(btn));\r\n          ui.button(\"กลับ\");\r\n\r\n          ui.show(pl).then(res => {\r\n            if (res.canceled || res.selection === mobs.length) return SettingSystems(pl, 0);\r\n\r\n            const selectedMob = mobs[res.selection];\r\n            const confirm = new MessageFormData()\r\n              .title(\"ลบรายชื่อม็อบ\")\r\n              .body(`คุณยืนยันที่จะลบม็อบนี้ ${formatName(selectedMob)}\\nเพื่อให้กลับมาสามารถรวมกันได้ใช่หรือไม่`)\r\n              .button1(\"§2ยืนยัน\")\r\n              .button2(\"§cย้อนกลับ\");\r\n\r\n            confirm.show(pl).then(res => {\r\n              if (res.canceled) return;\r\n              if (res.selection === 0) {\r\n                UnStackMob.delete(selectedMob);\r\n                pl.sendMessage(`§7[§f${name}§7]§r§f:§r §aลบ§7ม็อบ §e${formatName(selectedMob)} §7สำเร็จ§r`);\r\n              }\r\n            });\r\n          });\r\n        }\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n};"],"mappings":"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","names":["system","world","world","system","world","world","world","world","world","world","world","world","world","world","world","system","world","world","system","world","world","system","system","world","system","world","ItemEnchantableComponent","x","ItemEnchantableComponent","system","world","system","world","system","world","system","system","world","system","world","world","x","world","world","config","world","pl","world","world","pl","system","world","system","world","system","world","system","CommandBuilder","system","ActionFormData","ModalFormData","system","system","res","ModalFormData","mobAdder","ActionFormData","CommandBuilder","world","main","world","system"],"file":"../scripts/Index.js"}